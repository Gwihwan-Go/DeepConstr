["tf.raw_ops.Abs", "tf.raw_ops.Acos", "tf.raw_ops.Acosh", "tf.raw_ops.AdjustHue", "tf.raw_ops.All", "tf.raw_ops.Asin", "tf.raw_ops.BesselI0e", "tf.raw_ops.BesselI1e", "tf.raw_ops.BiasAdd", "tf.raw_ops.BiasAddGrad", "tf.raw_ops.BitwiseAnd", "tf.raw_ops.BitwiseXor", "tf.raw_ops.BroadcastTo", "tf.raw_ops.Bucketize", "tf.raw_ops.Cholesky", "tf.raw_ops.ComplexAbs", "tf.raw_ops.Conj", "tf.raw_ops.Cosh", "tf.raw_ops.DepthToSpace", "tf.raw_ops.Digamma", "tf.raw_ops.DivNoNan", "tf.raw_ops.EluGrad", "tf.raw_ops.Equal", "tf.raw_ops.FloorMod", "tf.raw_ops.LogSoftmax", "tf.raw_ops.LogicalNot", "tf.raw_ops.LogicalOr", "tf.raw_ops.MatMul", "tf.raw_ops.Maximum", "tf.raw_ops.Mean", "tf.raw_ops.Min", "tf.raw_ops.Minimum", "tf.raw_ops.Mul", "tf.raw_ops.Multinomial", "tf.raw_ops.Ndtri", "tf.raw_ops.Neg", "tf.raw_ops.NextAfter", "tf.raw_ops.Rsqrt", "tf.raw_ops.RsqrtGrad", "tf.raw_ops.Select", "tf.raw_ops.Selu", "tf.raw_ops.Sign", "tf.raw_ops.Sinh", "tf.raw_ops.SoftmaxCrossEntropyWithLogits", "tf.raw_ops.Softsign", "tf.raw_ops.SoftsignGrad", "tf.raw_ops.SqrtGrad", "tf.raw_ops.Square", "tf.raw_ops.SquaredDifference", "torch.Tensor.__and__", "torch.Tensor.__iand__", "torch.Tensor.__ior__", "torch.Tensor.__ixor__", "torch.Tensor.__lshift__", "torch.Tensor.__or__", "torch.Tensor.__rshift__", "torch.Tensor.__xor__", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.add", "torch.Tensor.addbmm", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_strided_", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_xor", "torch.Tensor.bmm", "torch.Tensor.broadcast_to", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clamp_max", "torch.Tensor.clamp_max_", "torch.Tensor.clamp_min", "torch.Tensor.clamp_min_", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.deg2rad", "torch.Tensor.det", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.dsplit", "torch.Tensor.eq", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp2", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.fill_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.lerp", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_softmax", "torch.Tensor.logical_and", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.lt", "torch.Tensor.masked_fill", "torch.Tensor.masked_scatter", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.narrow", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu_", "torch.Tensor.trunc", "torch.Tensor.type_as", "torch.Tensor.unfold", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.zero_", "torch._C._linalg.linalg_matrix_power", "torch._C._linalg.linalg_matrix_rank", "torch.adaptive_avg_pool1d"]