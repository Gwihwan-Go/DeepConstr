constraints:
  axis:
    default: null
    dtype: list[int]
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  keep_dims:
    default: false
    dtype: bool
    init: false
    required: false
  name:
    default: null
    dtype: str
    init: false
    required: false
infered_history: []
infered_times: 21
package: tf
pass_rate: 0.92
rules:
- cot: The error arises because the attribute 'T' of the input tensor is of type bool,
    but it needs to be of a different type. The allowed types are float, double, int32,
    uint8, int16, int8, int64, bfloat16, uint16, half, uint32, uint64, qint8, quint8,
    qint32, qint16, quint16. Therefore, the type of the tensor 'input' should be corrected
    to match one of the allowed types. The attribute 'keep_dims' is correctly set
    to False and does not need to be changed.
  target: "Error: Value for attr 'T' of bool is not in the list of allowed values:\
    \ float, double, int32, uint8, int16, int8, int64, bfloat16, uint16, half, uint32,\
    \ uint64, qint8, quint8, qint32, qint16\n ; NodeDef: ; Op output:T; attr=keep_dims:bool,default=false;\
    \ attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8,\
    \ DT_INT64, DT_BFLOAT16, DT_UINT16, DT_HALF, DT_UINT32, DT_UINT64, DT_QINT8, DT_QUINT8,\
    \ DT_QINT32, DT_QINT16, DT_QUINT16]; attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32,\
    \ DT_INT64]> [Op:Min]"
  txt: input.dtype in ["float", "double", "int32", "uint8", "int16", "int8", "int64",
    "bfloat16", "uint16", "half", "uint32", "uint64", "qint8", "quint8", "qint32",
    "qint16"]
- cot: 'The error is due to an invalid reduction dimension. Looking at the args, the
    function is trying to reduce on dimension 500, but the input tensor has 0 dimensions.
    Therefore, the reduction dimension (axis) should be less than the dimensions of
    the input tensor. Left : axis[i] for each i in axis. It implies that 500 is a
    problem, so Op : <, and Right : input.rank. Also, it should be non-negative, so
    Op : >=, and Right : 0.'
  target: 'Error: Invalid reduction dimension (500 for input with 0 dimension(s) [Op:Min]'
  txt: ((all(i < input.rank for i in axis)) and (all(i >=
    0 for i in axis)))
time_cost: 407.34678387641907
title: tf.raw_ops.Min
tokens_used: 16273
trained: true
