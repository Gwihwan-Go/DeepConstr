constraints:
  name:
    default: null
    dtype: str
    init: false
    required: false
  x:
    default: null
    dtype: bfloat16,float16,float32,float64,complex64,complex128
    init: false
    required: true
infered_history: []
infered_times: 9
package: tf
pass_rate: 0.93
rules:
- cot: 'The error is due to an incorrect value for ''T'' from args. The attribute
    ''T'' is of type int32, but it should be one of the following types: bfloat16,
    half, float, double, complex64, complex128. Therefore, type(x) should be corrected
    to be one of the following: bfloat16, half, float, double, complex64, complex128.
    Op : in, and Right : [bfloat16, half, float, double, complex64, complex128].'
  target: "rror: Value for attr 'T' of int32 is not in the list of allowed values:\
    \ bfloat16, half, float, double, complex64, complex128\n ; NodeDef: ; Op y:T;\
    \ attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64,\
    \ DT_COMPLEX128]> [Op:Sqrt] name:"
  txt: type(x) in [bfloat16, half, float, double, complex64, complex128]
- cot: The error is due to the wrong data type. Let's see what the args were. The
    type of the tensor 'x' is 'bfloat16', but 'tensorflow' doesn't have the attribute
    'complex32'. So the data type of 'x' must be adjusted. The operation would be
    '==' and the right value would be the valid data types.
  target: 'rror: module ''tensorflow'' has no attribute ''complex32'''
  txt: type(x) == valid_types
time_cost: 106.33420991897583
title: tf.raw_ops.Sqrt
tokens_used: 5049
trained: true
