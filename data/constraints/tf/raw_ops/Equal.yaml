constraints:
  incompatible_shape_error:
    default: true
    dtype: bool
    init: false
    required: false
  name:
    default: null
    dtype: str
    init: false
    required: false
  x:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  y:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 12
package: tf
pass_rate: 0.98
rules:
- cot: 'The error arises because the function is trying to perform an operation requiring
    a float tensor and an int64 tensor. However, both tensors in generated args must
    have the same data type. Let''s see what the args were. the ''x'' tensor is int8,
    but the ''y'' tensor is of type float32. Therefore, Left : type(x), which is the
    type of tensor x, should be corrected. It says that should be equal to the datatype
    of tensor y, so Op : ==, and Right : type(y).'
  target: 'cannot compute Equal as input #1(zero-based) was expected to be a float
    tensor but is a int64 tensor name:'
  txt: type(x) == type(y)
- cot: 'The error is triggered because the input for dynamic binary or n-ary op lowering
    was of a rank greater than 5. Let''s see what the args were. The tensors ''x''
    and ''y'' both have 8 dimensions. However, the operation only allows for at most
    5 dimensions. Therefore, the Left : len(x.shape), which is the number of dimensions
    of tensor x, should be corrected. It says that should be less than or equal to
    5, so Op : ''<='', and Right : 5. Similarly for tensor ''y''.'
  target: 'rror: Input for dynamic binary or n-ary op lowering was of a rank greater
    than 5 [Op:Equal] name:'
  txt: len(x.shape)<=5
- cot: 'The error occurs because the shapes of the tensors ''x'' and ''y'' are not
    broadcastable. Let''s see what the args were. The shape of ''x'' is [9, 8, 6,
    8] and the shape of ''y'' is [1, 3]. To be broadcastable, the size of each dimension
    of ''x'' must either be equal to the size of the corresponding dimension of ''y'',
    or one of them must be 1. Therefore, the Left : shape(x), should be corrected.
    It says that should be equal to the shape of ''y'' or one of them should be 1,
    so Op : ''=='', and Right : shape(y) or 1. Also, the rank of ''x'' should be equal
    to the rank of ''y'', so Left : rank(x), Op : ''=='', and Right : rank(y).'
  target: 'rror: required broadcastable shapes [Op:Equal] name:'
  txt: ((x.shape[i]==y.shape[i] or x.shape[i]==1 or y.shape[i]==1 for i in range(len(x.shape))))
    and (rank(x) == rank(y))
time_cost: 469.3008179664612
title: tf.raw_ops.Equal
tokens_used: 8450
trained: true
