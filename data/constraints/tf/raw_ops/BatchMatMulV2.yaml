constraints:
  adj_x:
    default: false
    dtype: bool
    init: false
    required: false
  adj_y:
    default: false
    dtype: bool
    init: false
    required: false
  name:
    default: null
    dtype: str
    init: false
    required: false
  x:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  y:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history:
- 4
- 3
- 8
- 3
infered_times: 18
package: tf
pass_rate: 0.48
rules:
- cot: 'The error arises because the function BatchMatMulV2 is trying to perform an
    operation on a int16 tensor and a bool tensor. However, both tensors in the operation
    must have the same data type. Let''s see what the args were. The ''x'' tensor
    is int16, but the ''y'' tensor is of type bool. Therefore, Left : type(y), which
    is the type of tensor y, should be corrected. It says that should be equal to
    the datatype of tensor x, so Op : ==, and Right : type(x).'
  target: 'cannot compute BatchMatMulV2 as input #1(zero-based) was expected to be
    a int16 tensor but is a float tensor name:'
  txt: type(y) == type(x)
- cot: 'The error is triggered because In[0] and In[1] don''t have compatible batch
    dimensions. In[0] and In[1] refer to ''x'' and ''y'' respectively. It seems ''x''
    and ''y'' do not have same len() and shape. Therefore, you should correct len(x),
    x.shape, len(y), and y.shape. Ops : ''=='', Right : len(y), y.shape.'
  target: 'In[0] and In[1] must have compatible batch dimensions: [8,6,6,1,3,4,1,8,2,1]
    vs. [2,6,6,1,1,7,2,1,7,8] [Op:BatchMatMulV2] name:'
  txt: all(x.shape[i]==y.shape[i] for i in range(len(x.shape)))
- cot: 'The error is caused by the input tensor ''x'' having less than the required
    number of dimensions for the BatchMatMulV2 operation. The operation requires that
    the input tensor should have a minimum of 2 dimensions. However, in this case,
    the tensor ''x'' only has 1 dimension. Therefore, the Left : x.dim should be corrected.
    It should be greater than or equal to 2. So, Ops : ''>='', and Right : 2.'
  target: 'In[0] ndims must be >= 2: 1 [Op:BatchMatMulV2] name:'
  txt: (x.dim >= 2) or ((x.shape[0] == y.shape[0]) and (x.dim >= 2))
- cot: 'The error is due to the incompatible size of matrices x and y for multiplication.
    In this case, the last dimension of x and the second-to-last dimension of y should
    be equal for BatchMatMulV2 operation. However, the dimensions of x and y are [4,
    2] and [4, 2, 8, 2] respectively. Therefore, the dimensions of x and y should
    be corrected to satisfy the condition x.dim == y.dim - 1 and x[-1] == y[-2]. '
  target: 'Matrix size-incompatible: In[0]: [1,10], In[1]: [1,10,9] [Op:BatchMatMulV2]
    name:'
  txt: ((x[-1] == y[-2]) and ((x[0] == y[0]) or (x[0] == 1) or (y[0] == 1))) or ((x.dim
    == y.dim - 1) or (len(x) == len(y) - 1 and x[-1] == y[-2]))
time_cost: 1503.661162853241
title: tf.raw_ops.BatchMatMulV2
tokens_used: 13420
