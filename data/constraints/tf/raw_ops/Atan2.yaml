constraints:
  name:
    default: 'null'
    dtype: str
    init: false
    required: false
  x:
    default: null
    dtype: bfloat16,float16,float32,float64
    init: false
    required: true
  y:
    default: null
    dtype: bfloat16,float16,float32,float64
    init: false
    required: true
infered_history:
- 4
- 7
- 4
infered_times: 16
package: tf
pass_rate: 0.86
rules:
- cot: 'The error occurs because the function is trying to perform an operation on
    a float tensor and a half tensor. However, both tensors in generated args must
    have the same data type. Let''s see what the args were. The ''x'' tensor is float32,
    but the ''y'' tensor is of type float16. Therefore, Left : type(y), which is the
    type of tensor y, should be corrected. It says that should be equal to the datatype
    of tensor x, so Op : ==, and Right : type(x).'
  target: 'cannot compute Atan2 as input #1(zero-based) was expected to be a float
    tensor but is a half tensor [Op:Atan2] name:'
  txt: type(y)==type(x)
- cot: 'The error occurs because an input tensor has a rank greater than 5. From the
    given values, the tensor ''y'' has a rank of 10 which is greater than 5. Hence,
    the constraint is that the rank of ''y'' should be less than or equal to 5. Therefore,
    Left : y.rank, Op : ''<='', Right : 5. Similarly, the tensor ''x'' has a rank
    of 3 which is acceptable as it is less than or equal to 5. So, no constraint needed
    for ''x''.'
  target: 'Input for dynamic binary or n-ary op lowering was of a rank greater than
    5 [Op:Atan2] name:'
  txt: ((len(y.shape) == len(x.shape))) and (y.rank <= 5)
- cot: 'The error seems to be occurring because the shapes of tensors ''''y'''' and
    ''''x'''' are not broadcastable for the operation ''''Atan2''''. Broadcasting
    in tensor operations requires that the trailing dimensions of the tensors are
    either 1 or the same. So, the constraint should be that for each dimension starting
    from the last, the size of the dimension in ''''y'''' should be equal to the size
    of the dimension in ''''x'''' or one of them should be 1. We start from the last
    dimension because broadcasting aligns dimensions from the end. Therefore, we can
    revise the constraints as follows:'
  target: 'required broadcastable shapes [Op:Atan2] name:'
  txt: all(y.shape[i] == x.shape[i] or y.shape[i] == 1 or x.shape[i] == 1 for i in
    range(-1, -min(len(y.shape), len(x.shape))-1, -1))
time_cost: 1863.1396009922028
title: tf.raw_ops.Atan2
tokens_used: 10934
