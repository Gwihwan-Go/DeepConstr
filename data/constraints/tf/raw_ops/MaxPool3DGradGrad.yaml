constraints:
  data_format:
    default: NDHWC
    dtype: str
    init: false
    required: false
  grad:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  ksize:
    default: null
    dtype: list[int]
    init: false
    required: true
  name:
    default: null
    dtype: str
    init: false
    required: false
  orig_input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  orig_output:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  padding:
    default: null
    dtype: str
    init: false
    required: true
  strides:
    default: null
    dtype: list[int]
    init: false
    required: true
infered_history:
- 8
- 8
- 5
- 5
- 5
infered_times: 33
package: tf
pass_rate: 0.0
rules:
- cot: The error is triggered because the length of 'ksize' is not at least 5. The
    'ksize' provided is [11, 500, 12, 13, 14] which has a length of 1. Therefore,
    the length of 'ksize' should be corrected to be at least 5. This can be corrected
    by ensuring len(ksize) >= 5. Similarly, 'strides' should also be at least 5 in
    length. Therefore, len(strides) >= 5 should be enforced.
  target: "Value for attr 'data_format' of \"not defined\" is not in the list of allowed\
    \ values: \"NDHWC\", \"NCDHW\"\n ; NodeDef: ; Op output:T; attr=ksize:list(int),min=5;\
    \ attr=strides:list(int),min=5; attr=padding:string,allowed=[\"SAME\", \"VALID\"\
    ]; attr=data_format:string,default=\"NDHWC\",allowed=[\"NDHWC\", \"NCDHW\"]; attr=T:type,allowed=[DT_FLOAT,\
    \ DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16, DT_INT8, DT_INT64, DT_BFLOAT16, DT_UINT16,\
    \ DT_HALF, DT_UINT32, DT_UINT64]> [Op:MaxPool3DGradGrad] name:"
  txt: ((len(ksize) >= 5) and (len(strides) >= 5)) and ((ksize != None) and (len(ksize)
    >= 5) and (padding != None) and (padding in ["SAME", "VALID"]) and (data_format
    != None) and (data_format in ["NDHWC", "NCDHW"])) and ((len(ksize) >= 5) and (len(strides)
    >= 5))
- cot: 'The error arises because the function is trying to perform a operation on
    a float tensor and a int32 tensor. However, both tensors in generated args must
    have the same data type. Let''s see what the args were. ''orig_output'' tensor
    is int64, but the ''grad'' tensor is of type float32. Therefore, Left : grad.dtype,
    which is the type of tensor grad, should be corrected. It says that should be
    equal to the datatype of tensor orig_output, so Op : ==, and Right : orig_output.dtype.'
  target: 'cannot compute MaxPool3DGradGrad as input #1(zero-based) was expected to
    be a float tensor but is a int32 tensor [Op:MaxPool3DGradGrad] name:'
  txt: ((ksize[1] >= 5) or (grad.dtype==orig_output.dtype)) and ((len(ksize) >= 5)
    or (grad.dtype==orig_output.dtype)) and ((ksize[1] >= 5) or (grad.dtype==orig_output.dtype))
- cot: 'The error is due to the attribute ''ksize'' having a length less than the
    minimum requirement of 5. The function is trying to execute MaxPool3DGradGrad
    operation which requires ''ksize'' to have at least 5 elements. Therefore, Left
    : len(ksize), needs to be at least 5, so Op : >=, and Right : 5.'
  target: 'Pooling is not yet supported on the batch dimension. [Op:MaxPool3DGradGrad]
    name:'
  txt: (len(ksize) >= 5)
- cot: 'The error indicates that the operation MaxPool3DGradGrad is not supported
    for the data type int32, and the device for executing the operation cannot be
    found. The possible devices and data types are specified in the error message.
    Therefore, the data type of ''orig_input'' should be one of [''DT_FLOAT'', ''DT_BFLOAT16'',
    ''DT_HALF''] and the device should be one of [''XLA_CPU_JIT'', ''XLA_GPU_JIT'',
    ''CPU'', ''GPU'']. Op : in, and Right : [''DT_FLOAT'', ''DT_BFLOAT16'', ''DT_HALF'']
    and Device: in [''XLA_CPU_JIT'', ''XLA_GPU_JIT'', ''CPU'', ''GPU''].'
  target: "Could not find device for node: = MaxPool3DGradGrad[T=DT_INT32, data_format=\"\
    NCDHW\", ksize=[11, 6, 12, 13, 14], padding=\"SAME\", strides=[20, 21, 22, 23,\
    \ 24]]\nAll kernels registered for op MaxPool3DGradGrad:\n device='XLA_CPU_JIT';\
    \ T in [DT_FLOAT]\n device='XLA_GPU_JIT'; T in [DT_FLOAT]\n device='CPU'; T in\
    \ [DT_BFLOAT16]\n device='CPU'; T in [DT_FLOAT]\n device='GPU'; T in [DT_BFLOAT16]\n\
    \ device='GPU'; T in [DT_HALF]\n device='GPU'; T in [DT_FLOAT]\n [Op:MaxPool3DGradGrad]\
    \ name:"
  txt: (len(ksize) >= 5 and orig_input != None and orig_output != None and grad !=
    None and strides != None and padding != None and data_format != None) and (type(orig_input)
    in ['DT_FLOAT', 'DT_BFLOAT16', 'DT_HALF'] and Device in ['XLA_CPU_JIT', 'XLA_GPU_JIT',
    'CPU', 'GPU'])
- cot: 'The error is due to the fact that the attribute ''ksize'' has a length of
    1, while the minimum required length is 5. This means that the ''ksize'' tensor
    does not have enough values. Hence, the Left : len(ksize) should be corrected.
    It states that the length of ''ksize'' must be at least 5, so Op : >=, and Right
    : 5.'
  target: 'Sliding window ksize field must specify 5 dimensions [Op:MaxPool3DGradGrad]
    name:'
  txt: len(ksize) >= 5
time_cost: 7737.019302606583
title: tf.raw_ops.MaxPool3DGradGrad
tokens_used: 31387
trained: true
