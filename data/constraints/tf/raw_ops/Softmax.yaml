constraints:
  logits:
    default: null
    dtype: float16,bfloat16,float32,float64
    init: false
    required: true
  name:
    default: null
    dtype: str
    init: false
    required: false
infered_history: []
infered_times: 14
package: tf
pass_rate: 0.82
rules:
- cot: The error is due to 'tensorflow' not having an attribute 'complex32'. Looking
    at the given values, it seems 'logits' is a tensor of type 'bfloat16' with shape
    [10, 9, 8]. As such, there is no relation with 'complex32'. Therefore, the operation
    should be to check the dtype of the tensor and ensure it is not 'complex32'.
  target: 'rror: module ''tensorflow'' has no attribute ''complex32'''
  txt: logits.dtype != 'complex32'
- cot: 'The error is due to logits not having sufficient dimensions. Looking at the
    args, logits is a tensor of type float32. However, logits does not have any dimensions.
    To fix this, logits should have at least 1 dimension. Therefore, Left : logits.dim
    should be corrected. It says that logits must have >= 1 dimension, so Op : ''>='',
    and Right : 1.'
  target: 'rror: logits must have >= 1 dimension, got [] [Op:Softmax] name:'
  txt: logits.dim >= 1
- cot: 'The error is due to an incorrect tensor data type. The tensor ''logits'' has
    a data type of ''int32'', but the softmax function only accepts ''half'', ''bfloat16'',
    ''float'', or ''double''. Therefore, the data type of ''logits'' should be corrected.
    Op: in, and Right: [''half'', ''bfloat16'', ''float'', ''double''].'
  target: "rror: Value for attr 'T' of int32 is not in the list of allowed values:\
    \ half, bfloat16, float, double\n ; NodeDef: ; Op softmax:T; attr=T:type,allowed=[DT_HALF,\
    \ DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]> [Op:Softmax] name:"
  txt: logits.dtype in ['half', 'bfloat16', 'float', 'double']
time_cost: 182.05521392822266
title: tf.raw_ops.Softmax
tokens_used: 7566
trained: true
