constraints:
  features:
    default: null
    dtype: float16,bfloat16,float32,float64
    init: false
    required: true
  labels:
    default: null
    dtype: int32,int64
    init: false
    required: true
  name:
    default: 'null'
    dtype: str
    init: false
    required: false
infered_history: []
infered_times: 0
package: tf
pass_rate: 0.0
rules:
- cot: 'The error arises because the attribute ''T'' of ''features'' is of type int32,
    but it is expected to be one of half, bfloat16, float, double. The tensor ''features''
    is provided as int32, which is not compatible. Therefore, the type of ''features''
    should be corrected to match one of the allowed types. Op: in, and Right: [half,
    bfloat16, float, double].'
  target: "Value for attr 'Tlabels' of float is not in the list of allowed values:\
    \ int32, int64\n ; NodeDef: ; Op loss:T, backprop:T; attr=T:type,allowed=[DT_HALF,\
    \ DT_BFLOAT16, DT_FLOAT, DT_DOUBLE]; attr=Tlabels:type,default=DT_INT64,allowed=[DT_INT32,\
    \ DT_INT64]> [Op:SparseSoftmaxCrossEntropyWithLogits] name:"
  txt: (type(features) in ["half", "bfloat16", "float", "double"]) and (type(labels)
    in ["int32", "int64"]) and (type(features) in ["half", "bfloat16", "float", "double"])
- cot: 'The error is occurring because the logits are not 2-D as required by the SparseSoftmaxCrossEntropyWithLogits
    operation. In this case, logits are the tensor of float32 with shape [6,1,6,6,1,6,4,1,9,2].
    To make it 2-D, it should have only two dimensions. However, logits have 10 dimensions.
    Therefore, the Left : features.dim should be corrected to 2. Ops : ''=='', Right
    : 2.'
  target: 'logits must be 2-D, but got shape [6,1,6,6,1,6,4,1,9,2] [Op:SparseSoftmaxCrossEntropyWithLogits]
    name:'
  txt: features.dim == 2
- cot: 'The error is triggered because logits and labels do not have the same first
    dimension. In the provided values, the ''features'' tensor has a shape of [9,
    8] and the ''labels'' tensor has a shape of [6]. The error states that the logits
    shape was [7,4] and the labels shape was [1]. It seems the first dimensions of
    logits and labels should match. Therefore, we need to ensure that the first dimension
    of the ''features'' tensor (which likely becomes the logits) matches the shape
    of the ''labels'' tensor. For this, the Op : ==, and Right : len(labels).'
  target: 'logits and labels must have the same first dimension, got logits shape
    [7,4] and labels shape [1] [Op:SparseSoftmaxCrossEntropyWithLogits] name:'
  txt: len(features)==len(labels)
time_cost: 0.011747360229492188
title: tf.raw_ops.SparseSoftmaxCrossEntropyWithLogits
tokens_used: 0
trained: true
