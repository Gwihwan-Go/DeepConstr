constraints:
  begin:
    default: null
    dtype: list[int]
    init: false
    required: true
  begin_mask:
    default: 0
    dtype: list[int]
    init: false
    required: false
  ellipsis_mask:
    default: 0
    dtype: int
    init: false
    required: false
  end:
    default: null
    dtype: list[int]
    init: false
    required: true
  end_mask:
    default: 0
    dtype: int
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  name:
    default: null
    dtype: str
    init: false
    required: false
  new_axis_mask:
    default: 0
    dtype: int
    init: false
    required: false
  shrink_axis_mask:
    default: 0
    dtype: int
    init: false
    required: false
  strides:
    default: null
    dtype: list[int]
    init: false
    required: true
infered_history:
- 1
- 4
- 6
- 3
infered_times: 14
package: tf
pass_rate: 0.32
rules:
- cot: 'The error is due to the incorrect data type of ''begin_mask''. It''s provided
    as a list, while an integer was expected. Thus, the operation failed while trying
    to convert ''begin_mask'' to an integer. The same issue may occur for ''end_mask'',
    ''new_axis_mask'' and ''shrink_axis_mask'' as they also expect integers. Therefore,
    the Left : type(begin_mask), type(end_mask), type(new_axis_mask), type(shrink_axis_mask)
    should be corrected to int.'
  target: "int() argument must be a string, a bytes-like object or a number, not 'list'\n\
    \nDuring handling of the above exception, another exception occurred:\n\nTraceback\
    \ (most recent call last):\n File \"/home/guihuan/LLM/train/trainer.py\", line\
    \ 311, in execute\n  self.generator.execute()\n File \"/home/guihuan/LLM/generators.py\"\
    , line 476, in execute\n  output = instance(**forward_values)\n File \"/home/guihuan/.conda/envs/py39/lib/python3.9/site-packages/tensorflow/python/util/tf_export.py\"\
    , line 403, in wrapper\n  return f(**kwargs)\n File \"/home/guihuan/.conda/envs/py39/lib/python3.9/site-packages/tensorflow/python/ops/gen_array_ops.py\"\
    , line 10941, in strided_slice\n  return strided_slice_eager_fallback(\n File\
    \ \"/home/guihuan/.conda/envs/py39/lib/python3.9/site-packages/tensorflow/python/ops/gen_array_ops.py\"\
    , line 10991, in strided_slice_eager_fallback\n  begin_mask = _execute.make_int(begin_mask,\
    \ \"begin_mask\")\n File \"/home/guihuan/.conda/envs/py39/lib/python3.9/site-packages/tensorflow/python/eager/execute.py\"\
    , line 159, in make_int\n  raise TypeError(\"Expected int for argument '%s' not\
    \ %s.\" %\nType"
  txt: type(begin_mask) == int and type(end_mask) == int and type(new_axis_mask) ==
    int and type(shrink_axis_mask) == int
- cot: 'The error is caused because the ''begin'', ''end'', and ''strides'' are not
    equal size 1D tensors, their shapes are different. Let''s see what the args were.
    It seems ''begin'', ''end'', and ''strides'' values are not same. So, len(begin),
    len(end), and len(strides) should be corrected. It says should be same size tensors.
    so Op : ==, and Right : len(begin), len(end), and len(strides)'
  target: Expected begin, end, and strides to be 1D equal size tensors, but got shapes
    [1], [1], and [6] instead. [Op:StridedSlice]
  txt: len(end) == len(strides)
- cot: The error occurs due to multiple ellipses in slice specification which is not
    allowed in 'StridedSlice' operation. The operation allows only one ellipsis. Therefore,
    the constraint should be that 'ellipsis_mask' should be either 0 or 1 because
    it is a binary mask where the presence of an ellipsis is represented by 1 and
    its absence by 0.
  target: Multiple ellipses in slice spec not allowed [Op:StridedSlice]
  txt: ellipsis_mask == 0 or ellipsis_mask == 1
time_cost: 488.4012405872345
title: tf.raw_ops.StridedSlice
tokens_used: 12101
