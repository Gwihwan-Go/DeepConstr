constraints:
  indices:
    default: null
    dtype: int16,int32,int64,uint16
    init: false
    required: true
  name:
    default: 'null'
    dtype: str
    init: false
    required: false
  tensor:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  updates:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
package: tf
pass_rate: 0.0
rules:
- cot: 'The error suggests that the indices tensor type is float but it should be
    one of int16, int32, int64, uint16. Therefore, the type of ''indices'' should
    be corrected to match one of the allowed types: int16, int32, int64, uint16. Op
    : in, and Right : [int16, int32, int64, uint16].'
  target: "Value for attr 'Tindices' of float is not in the list of allowed values:\
    \ int16, int32, int64, uint16\n ; NodeDef: ; Op output:T; attr=T:type; attr=Tindices:type,allowed=[DT_INT16,\
    \ DT_INT32, DT_INT64, DT_UINT16]> [Op:TensorScatterUpdate] name:"
  txt: indices.dtype in ["int16", "int32", "int64", "uint16"]
title: tf.raw_ops.TensorScatterUpdate
skipped: true 
skipped_reason: bug
