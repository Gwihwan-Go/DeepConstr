constraints:
  name:
    default: 'null'
    dtype: str
    init: false
    required: false
  x:
    default: null
    dtype: float16,bfloat16,float32,float64,complex64,complex128
    init: false
    required: true
  y:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history:
- 4
- 6
- 4
- 2
infered_times: 17
package: tf
pass_rate: 1.0
rules:
- cot: 'The error arises because the function is trying to perform a operation on
    a tensor with mismatching datatype. The ''x'' tensor is bfloat16, but the ''y''
    tensor is of type float32. However, both tensors in generated args must have the
    same data type. Therefore, Left : x.dtype, which is the type of tensor x. It says
    that should be equal to the datatype of tensor y, so Op : ==, and Right : y.dtype.
    Also, the error message indicates that the tensor should not be an int32 type,
    so Op : !=, and Right : int32.'
  target: 'cannot compute Xlogy as input #1(zero-based) was expected to be a float
    tensor but is a int32 tensor [Op:Xlogy] name:'
  txt: x.dtype == y.dtype
- cot: 'The error is due to the input tensor having a rank greater than 5. Both ''x''
    and ''y'' tensors have a rank of 10. The maximum permissible rank for the operation
    is 5. Therefore, the relationship constraints would be that the dimensions of
    both ''x'' and ''y'' tensors must be less than or equal to 5. So, Left : x.rank
    and y.rank, Ops : ''<='', Right : 5.'
  target: 'Input for dynamic binary or n-ary op lowering was of a rank greater than
    5 [Op:Xlogy] name:'
  txt: ((x.rank <= 5)) and ((y.rank <= 5))
- cot: 'The error occurs because the shapes of ''''x'''' and ''''y'''' are not broadcastable.
    For the shapes to be broadcastable, the size of each dimension from the last must
    be equal or one of them must be 1. Therefore, for the dimensions of ''''x''''
    and ''''y'''' to be broadcastable, we can write the constraints as follows:'
  target: 'required broadcastable shapes [Op:Xlogy] name:'
  txt: all(x.shape[i] == y.shape[i] or x.shape[i] == 1 or y.shape[i] == 1 for i in
    range(-1, -min(len(x.shape), len(y.shape))-1, -1))
- cot: 'The error indicates that the attribute ''T'' is presented as int32, but it
    is expected to be one of half, bfloat16, float, double, complex64, complex128.
    The tensors ''x'' and ''y'' are both provided as bool, which is not compatible.
    Hence, the Left : x.dtype or y.dtype should be corrected to match one of the allowed
    types. Op : in, and Right : ["half", "bfloat16", "float", "double", "complex64",
    "complex128"].'
  target: "Value for attr 'T' of int32 is not in the list of allowed values: half,\
    \ bfloat16, float, double, complex64, complex128\n ; NodeDef: ; Op z:T; attr=T:type,allowed=[DT_HALF,\
    \ DT_BFLOAT16, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]> [Op:Xlogy] name:"
  txt: x.dtype in ["half", "bfloat16", "float", "double", "complex64", "complex128"]
    and y.dtype in ["half", "bfloat16", "float", "double", "complex64", "complex128"]
time_cost: 980.5778815746307
title: tf.raw_ops.Xlogy
tokens_used: 11278
