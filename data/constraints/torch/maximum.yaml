alias: torch.maximum
constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  other:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 23
package: torch
pass_rate: 0.87
rules:
- cot: 'Error is triggered because we are trying to resize storage, specifically the
    ''out'' tensor. Looking at the values, the ''out'' tensor has a different shape
    than the ''input'' tensor. Therefore, the shape of ''out'' should match the shape
    of ''input''. So, Left: out.shape , Op: == , Right: input.shape'
  target: Trying to resize storage that is not resizable
  txt: (out.shape == other.shape) and (out.shape == input.shape)
- cot: 'The error is triggered because result type Double cannot be cast to the Char.
    Let''s see what the args were. In the given values, the dtype of ''input'' is
    float32, ''other'' is float64, and ''out'' is int8. The dtypes are inconsistent
    which is causing the issue. Therefore, the dtypes of all arguments should be the
    same to avoid this error. Left : type(input), op : ==, comparator : type(other)
    or type(out)'
  target: result type Double can't be cast to the desired output type Char
  txt: (type(input)==type(other)) and (type(other)==type(out))
time_cost: 3005.1630878448486
title: torch.maximum
tokens_used: 16841
trained: true
