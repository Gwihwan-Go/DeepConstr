constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 14
package: torch
pass_rate: 0.97
rules:
- cot: "Error is triggered because we are trying to resize storage that is not resizable.\
    \ Let's see what the args were. The storage indicates 'out' tensor. So, it means\
    \ that 'out' tensor shape should be matched with the operation results. In this\
    \ operation, the result shape is input.shape. Therefore, Left : out.shape, out.dim,\
    \ Op : ==, Right : input.shape, input.dim. \n\nThe complete constraints should\
    \ be:"
  target: Trying to resize storage that is not resizable
  txt: out.dim == input.dim and all(out.shape[i] == input.shape[i] for i in range(out.dim))
- cot: The error is due to the fact that the 'out' tensor has a dtype of int32, but
    a dtype of float32 is expected. Therefore, the dtype of the 'out' tensor should
    be float32. The left is 'type(out)', the operator is '==', and the right is 'type(input)'.
  target: Found dtype Int but expected Float
  txt: type(out) == type(input)
time_cost: 406.9274961948395
title: torch.sgn
tokens_used: 7708
trained: true
