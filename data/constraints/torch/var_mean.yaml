constraints:
  correction:
    default: '1'
    dtype: float
    init: false
    required: false
  dim:
    default: 'null'
    dtype: int
    init: false
    required: false
  input:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  keepdim:
    default: 'false'
    dtype: bool
    init: false
    required: false
infered_history: []
infered_times: 11
package: torch
pass_rate: 1.0
rules:
- cot: The error is due to an invalid dimension. In the provided args, the dimension
    'dim' is given as 8, while the error message suggests that the valid range of
    dimensions is between -1 and 0. If 'dim' is meant to represent a specific dimension
    of the input tensor, it should be less than the rank of the input tensor. In this
    case, the rank of the input tensor seems to be 0 (as the range of valid dimensions
    is -1 to 0), but 'dim' is 8. So, the constraints should be 'dim' < input.rank
    and 'dim' >= -input.rank. Here, 'dim' refers to an index of a dimension in the
    input tensor, and 'input.rank' refers to the number of dimensions in the input
    tensor.
  target: Dimension out of range (expected to be in range of [-1, 0], but got 8)
  txt: (dim == 0) or (dim < len(input.shape))
- cot: 'The error is thrown because the ''var_mean'' function only supports floating
    point and complex dtypes, but the input tensor is of int32 dtype. The ''dim''
    and ''keepdim'' arguments seem to be correctly set, and the ''correction'' value
    is a float, so the issue is with the dtype of the ''input'' tensor. Therefore,
    to prevent this error, the dtype of the ''input'' tensor should be changed to
    a floating point or complex dtype. So, Left : input.dtype, Op : in, Right : [tf.float16,
    tf.float32, tf.float64, tf.complex64, tf.complex128].'
  target: var_mean only support floating point and complex dtypes
  txt: input.dtype in [tf.float16, tf.float32, tf.float64, tf.complex64, tf.complex128]
time_cost: 447.5418620109558
title: torch.var_mean
tokens_used: 7025
trained: true
