package: torch
constraints:
  tensors:
    is_pos: true
    default: null
    dtype: sequence[tensor]
    init: false
    required: true
  out:
    default: null
    dtype: tensor
    init: false
    required: true
pass_rate: 0.0
rules: {}
# - cot: 'Error is triggered because of 0-dimensional tensor. It expects to have at
#     least 2 dimensions. Let''s see what the args were. It seems ''input'' has 0 dimensions,
#     and is the problem. So the number of dimensions of ''input'' should be corrected,
#     which is input.ndims(). Therefore, Left : input.ndims(). It says that expected
#     at least 2, so Op : >=, and Right : 2. It also implies that the dimension cannot
#     be 0, so Op : !=, and Right : 0.'
#   target: torch.vsplit requires a tensor with at least 2 dimension, but got a tensor
#     with 0 dimensions!
#   txt: tensors[0].ndims() >= 2
title: torch.vstack
skipped_reason: unsupport constraints uncompatiable type(sequence tensors)
