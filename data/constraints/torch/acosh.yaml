constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 22
package: torch
pass_rate: 0.97
rules:
- cot: 'The error occurs because the output tensor type is not matching with the expected
    type. The input tensor type is float32 and the output tensor type is int8, which
    is not feasible. Therefore, The relation between the tensors should be Left :
    input.dtype, Right : out.dtype, and Op : ==. Also, Result type float can''t be
    cast to char, so the output tensor type should be a float type.'
  target: result type Float can't be cast to the desired output type Char
  txt: out.dtype == 'float32'
- cot: 'The error is due to an attempt to resize ''out'' tensor which is not resizable.
    Given the values of ''out'' tensor and ''input'' tensor, it is clear that the
    shapes of these two tensors are not matching. ''Out'' tensor has a shape of [9]
    while ''input'' tensor has a shape of [8,6,8,6,6,1]. Therefore, to avoid this
    error, these two tensors should have the same shape. So, the left side of the
    constraint should be ''out.shape'' and ''out.rank'', Op: ''=='', and the right
    side should be ''input.shape'' and ''input.rank''.'
  target: Trying to resize storage that is not resizable
  txt: out.rank==input.rank and all(out.shape[i]==input.shape[i] for i in range(out.rank))
time_cost: 701.6678590774536
title: torch.acosh
tokens_used: 11549
trained: true
