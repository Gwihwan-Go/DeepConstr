constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  sections:
    default: null
    dtype: int
    init: false
    required: true
infered_history: []
infered_times: 9
package: torch
pass_rate: 1.0
rules:
- cot: 'The error is triggered because the second dimension of the ''input'' tensor
    is not divisible by the ''sections'' value. In other words, the tensor cannot
    be evenly split into 7 sections along its second dimension because its size is
    9. To prevent this error, the second dimension of the tensor should be divisible
    by the ''sections'' value. Therefore, the logical constraint would be Left : input.shape[1]
    % sections. Op : ==, and Right : 0.'
  target: torch.hsplit attempted to split along dimension 1, but the size of the dimension
    9 is not divisible by the split_size 7!
  txt: (sections != 0 and input.shape[0] % sections == 0) and (input.shape[1] % sections
    == 0)
- cot: 'Error is triggered because of 0-dimensional tensor. It expects to have at
    least 1 dimension. Let''s see what the args were. It seems ''input'' tensor has
    0 dimensions, and is the problem. So the number of dimensions of ''input'' should
    be corrected, which is input.ndims(). Therefore, Left : input.ndims(). It says
    that expected at least 1, so Op : >=, and Right : 1.'
  target: torch.hsplit requires a tensor with at least 1 dimension, but got a tensor
    with 0 dimensions!
  txt: input.ndims() >= 1
- cot: 'The error is because the number of ''sections'' is not greater than 0, as
    required. The received value of ''sections'' is -1 which is not satisfying the
    requirement. Therefore, Left : sections, Op : ''>'', and Right : 0.'
  target: number of sections must be larger than 0, got -1
  txt: sections > 0
time_cost: 189.52441215515137
title: torch.hsplit
tokens_used: 5795
trained: true
