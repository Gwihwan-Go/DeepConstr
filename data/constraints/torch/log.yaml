alias: torch.log
constraints:
  input:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 21
package: torch
pass_rate: 0.97
rules:
- cot: 'The error is due to attempting to cast a tensor of type Float into a tensor
    of type Short. Therefore, the constraint should be that the output tensor type
    should be compatible with the input tensor type. In this case, the input tensor
    type is Float32, and the desired output tensor type is Short. Therefore, Left
    : type(input) or type(out), Op : ==, Right : float32'
  target: result type Float can't be cast to the desired output type Long
  txt: (input.dtype==int16) and (type(out)==float32)
- cot: 'The error suggests that there is an attempt to resize a tensor which is not
    resizable. The ''input'' tensor has a shape of [9, 4, 10, 6, 8] and the ''out''
    tensor has a shape of [1, 8, 4]. This discrepancy might be causing the issue.
    The dimensions of the ''out'' tensor should match the dimensions of the ''input''
    tensor. Therefore, Left: len(out.shape), Op: ''=='', and Right: len(input.shape).'
  target: Trying to resize storage that is not resizable
  txt: (all(input.shape[i] == out.shape[i] for i in range(len(input.shape)))) and
    (len(out.shape) == len(input.shape))
time_cost: 1076.0178174972534
title: torch.log
tokens_used: 11676
trained: true
