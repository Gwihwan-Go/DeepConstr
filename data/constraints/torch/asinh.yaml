constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 13
package: torch
pass_rate: 0.97
rules:
- cot: 'This error occurs when trying to resize a tensor that is not resizable. In
    this case, the ''input'' tensor has dimensions [1, 1, 6, 9, 7, 1, 1] and the ''out''
    tensor has dimensions [8, 8]. The tensors should have compatible dimensions. Therefore,
    Left: len(input.shape), Op: ''=='', and Right: len(out.shape).

    Additionally, each dimension of the input should be greater than or equal to the
    corresponding dimension in the output to prevent resizing errors. Therefore, all(input.shape[i]
    >= out.shape[i] for i in range(len(input.shape))) should hold true.'
  target: Trying to resize storage that is not resizable
  txt: (all(input.shape[i] == out.shape[i] for i in range(len(input.shape)))) and
    (len(input.shape) == len(out.shape) and all(input.shape[i] >= out.shape[i] for
    i in range(len(input.shape))))
time_cost: 268.43007016181946
title: torch.asinh
tokens_used: 6658
