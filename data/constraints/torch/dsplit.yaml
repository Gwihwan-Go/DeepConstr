constraints:
  indices:
    default: null
    dtype: list[int]
    init: false
    required: true
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 1
package: torch
pass_rate: 1.0
rules:
- cot: 'Error is triggered because the tensor has only 1 dimension while torch.dsplit
    requires a tensor with 3 dimensions. Let''s see what the args were. It seems ''input''
    tensor has only 1 dimension. Therefore, we need to ensure that the ''input'' tensor
    has at least 3 dimensions to avoid this error. So, Left : input.ndims(), Op :
    >=, and Right : 3. Also, It is clear that dimension cannot be 1, so Left : input.ndims(),
    Op : !=, and Right : 1.'
  target: torch.dsplit requires a tensor with at least 3 dimension, but got a tensor
    with 1 dimensions!
  txt: input.ndims() >= 3
time_cost: 30.996492624282837
title: torch.dsplit
tokens_used: 621
trained: true
