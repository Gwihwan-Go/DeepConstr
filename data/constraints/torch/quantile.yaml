constraints:
  dim:
    default: null
    dtype: int
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  interpolation:
    default: linear
    dtype: Literal["linear","lower","higher","midpoint","nearest"]
    init: false
    required: false
  keepdim:
    default: false
    dtype: bool
    init: false
    required: false
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
  q:
    default: null
    dtype: float,float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 16
package: torch
pass_rate: 0.0
rules:
- cot: "The error may arise if there's a mismatch between the dimensions of the input\
    \ tensors and the 'dim' argument. Given the input tensors, 'input' and 'q', both\
    \ have the dimensions [8, 6, 6] while 'dim' argument is 1 and output tensor 'out'\
    \ has the dimensions [8, 10, 4]. \n\nThe 'interpolation' function is likely to\
    \ be applied along the dimension specified by 'dim'. Therefore, the size of 'input'\
    \ and 'q' along the 'dim' should match the corresponding dimension in 'out' tensor.\
    \ So, the constraints should be as below:"
  target: '''interpolation'''
  txt: input.shape[dim] == out.shape[dim]
time_cost: 1146.3114564418793
title: torch.quantile
tokens_used: 10652
trained: true
