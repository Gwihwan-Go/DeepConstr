alias: torch.neg
constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 14
package: torch
pass_rate: 1.0
rules:
- cot: 'In this case, the error is triggered because the ''out'' tensor is being resized,
    which is not permitted. The ''out'' tensor should have the same shape as the ''input''
    tensor for the operation to be successful. Therefore, the constraint that needs
    to be imposed is that the shape of the ''out'' tensor should be equal to the shape
    of the ''input'' tensor. Thus, the constraint would look like this:'
  target: Trying to resize storage that is not resizable
  txt: out.shape == input.shape
- cot: 'The error indicates a data type mismatch. The expected data type is "Int"
    but "Float" is found. It seems that the ''out'' tensor has a float data type while
    the ''input'' tensor has an int data type. To prevent this error from happening
    again, we need to ensure that the data type of the ''out'' tensor matches the
    expected data type. The constraint can be expressed as:'
  target: Found dtype Float but expected Int
  txt: input.dtype == out.dtype
time_cost: 957.4794464111328
title: torch.neg
tokens_used: 7851
trained: true
