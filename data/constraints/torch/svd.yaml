constraints:
  compute_uv:
    default: true
    dtype: bool
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  some:
    default: true
    dtype: bool
    init: false
    required: false
infered_history: []
infered_times: 7
package: torch
pass_rate: 1.0
rules:
- cot: 'Error is triggered because of 1-dimensional tensor. it expects to have at
    least 2 dimensions. Let''s see what the args were. It seems example_key has 1
    dimension, and is the problem. so the number of dimensions of example_key should
    be corrected, which is input.dim. Therefore, Left : input.dim. It says that expected
    at least 2, so Op : >=, and Right : 2.'
  target: 'linalg.svd: input should have at least 2 dimensions, but has 1 dimensions
    instead'
  txt: input.dim >= 2
- cot: 'The error occurs due to the input tensor''s data type. The ''linalg.svd''
    function expects a tensor of type floating point or complex but got integer (int8).
    Let''s see what the args were. The input tensor is of type int8, but it needs
    to be of type float or complex. Hence, Left: input.dtype needs to be changed.
    It should be equal to either float or complex type, so Op: ==, and Right: [float,
    complex].'
  target: 'linalg.svd: Expected a floating point or complex tensor as input. Got Char'
  txt: input.dtype == float or input.dtype == complex
time_cost: 258.11507272720337
title: torch.svd
tokens_used: 4273
trained: true
