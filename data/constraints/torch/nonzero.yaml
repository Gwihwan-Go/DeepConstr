alias: torch.nonzero
constraints:
  as_tuple:
    default: false
    dtype: bool
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 12
package: torch
pass_rate: 0.32
rules:
- cot: "The error is due to the attempt to resize a storage that is not resizable.\
    \ This implies that the 'input' tensor's dimensions are being changed to match\
    \ the 'out' tensor's dimensions, but this operation isn't allowed. \n\nTherefore,\
    \ the 'input' and 'out' tensors should have the same dimensions. The constraint\
    \ could be:"
  target: Trying to resize storage that is not resizable
  txt: (as_tuple == True) or ((len(input.shape) == len(out.shape)) or (input.dtype
    == out.dtype))
- cot: 'The error is triggered because the ''out'' tensor is expected to be of scalar
    type Long, but it is of scalar type Float. Let''s see what the args were. It seems
    ''out'' tensor is of type float32. Therefore, the tensor type of ''out'' should
    be corrected. Left : type(out), which is the type of tensor ''out''. It says that
    should be equal to Long, so Op : ''=='', and Right : ''Long''.'
  target: 'nonzero: Expected out tensor to have scalar type Long but got scalar typeFloat'
  txt: type(out) == 'Long'
- cot: 'The error is due to the incompatibility between ''as_tuple'' set to True and
    usage of the ''out'' kwarg in the ''nonzero'' function. It indicates that ''nonzero''
    does not support the ''out'' kwarg when ''as_tuple'' is True. The wrongly provided
    values are ''out'' : Tensor:TensorDType.int64:[4, 1, 3, 2, 8, 2, 6, 6, 8, 1] and
    ''as_tuple'' : True. Therefore, Left: as_tuple, Op: ''=='', Right: False and Left:
    ''out'' in input, Op: ''=='', Right: False.'
  target: nonzero does not support the out kwarg when as_tuple is True
  txt: as_tuple == False
time_cost: 2524.0993225574493
title: torch.nonzero
tokens_used: 8421
trained: true
