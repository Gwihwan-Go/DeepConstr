alias: torch.sqrt
constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 14
package: torch
pass_rate: 0.93
rules:
- cot: "The error is due to trying to resize a storage that's not resizable. This\
    \ error occurs when the size of the input tensor does not match the size of the\
    \ output tensor. Therefore, the dimensions of the input and output tensor should\
    \ be equal. \nSo, Left: input.shape, Op: '==', and Right: out.shape"
  target: Trying to resize storage that is not resizable
  txt: input.shape == out.shape
- cot: 'The error is caused because the input tensor is of type float32 and the output
    tensor is of type int32. The tensor data types should be consistent to avoid this
    error. Hence, the constraints should be:'
  target: result type Float can't be cast to the desired output type Int
  txt: (input.dtype==int) or ((input.dtype==Long) or (input.dtype==out.dtype))
time_cost: 407.77034091949463
title: torch.sqrt
tokens_used: 8309
trained: true
