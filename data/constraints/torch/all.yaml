alias: torch.all
constraints:
  dim:
    default: null
    dtype: int
    init: false
    required: true
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  keepdim:
    default: null
    dtype: bool
    init: false
    required: false
infered_history: []
infered_times: 5
package: torch
pass_rate: 1.0
rules:
- cot: 'This error occurs when an invalid dimension is being accessed. Here, the ''dim''
    value is 4, however the size of the ''input'' tensor dimensions is 2 (the shape
    is [9, 10]). Therefore, the ''dim'' value should be less than the size of the
    ''input'' tensor dimensions. The range of valid values for ''dim'' is from -2
    to 1, inclusive. This is because negative indices count from the last dimension,
    so -2 and -1 are valid, as well as 0 and 1 for the first two dimensions. Therefore,
    the constraints are:


    1. ''dim'' should be less than the rank of the ''input'' tensor i.e., dim < input.rank,
    Op : <, Right : input.rank

    2. Considering the negative indexing, ''dim'' should be greater than or equal
    to negative of the ''input'' tensor rank i.e., dim >= -input.rank, Op : >=, Right
    : -input.rank'
  target: Dimension out of range (expected to be in range of [-2, 1], but got 4)
  txt: dim < len(input.shape)
time_cost: 144.39035606384277
title: torch.all
tokens_used: 2392
trained: true
