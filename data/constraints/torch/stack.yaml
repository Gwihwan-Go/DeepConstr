constraints:
  dim:
    default: 0
    dtype: int
    init: false
    required: false
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
  tensors:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 7
package: torch
pass_rate: 0.0
rules:
- cot: 'The error arises because the ''tensors'' argument is expected to be a tuple
    of Tensors, but a single Tensor was provided. Let''s see what the args were. ''tensors''
    was a tensor of float32. In order to be a tuple of Tensors, ''tensors'' should
    be a sequence of Tensors. Therefore, Left : type(tensors), which is the type of
    ''tensors'', should be corrected. It says that should be equal to the datatype
    of tuple, so Op : ==, and Right : type(tuple).'
  target: 'stack(): argument ''tensors'' must be tuple of Tensors, not Tensor'
  txt: type(tensors) == type(tuple)
time_cost: 114.05336141586304
title: torch.stack
tokens_used: 3609
skipped: true 
skipped_reason: unsupported constraints
