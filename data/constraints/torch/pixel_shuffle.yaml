constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  upscale_factor:
    default: null
    dtype: int
    init: false
    required: true
infered_history: []
infered_times: 14
package: torch
pass_rate: 0.8
rules:
- cot: 'The error is triggered because pixel_shuffle expects the input to have at
    least 3 dimensions, but the given input tensor only has 2. Therefore, to prevent
    the error, the input tensor must be reshaped to have three dimensions before being
    passed to pixel_shuffle. The constraint can be defined as follows:'
  target: pixel_shuffle expects input to have at least 3 dimensions, but got input
    with 2 dimension(s)
  txt: len(input.shape)>=3
- cot: 'Error is triggered because of a zero value for upscale_factor, which should
    be positive. Let''s see what the args were. It seems the upscale_factor is 0,
    which is the problem. Therefore, left : upscale_factor, op : >, right : 0.'
  target: pixel_shuffle expects a positive upscale_factor, but got 0
  txt: upscale_factor > 0
time_cost: 326.4277319908142
title: torch.pixel_shuffle
tokens_used: 7503
trained: true
