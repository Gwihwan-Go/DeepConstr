constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 10
package: torch
pass_rate: 1.0
rules:
- cot: 'The error is caused because the output type is expected to be of type "Float",
    but got "Bool". Let''s establish the correct relationship. Therefore, Left : out.dtype,
    Op : ==, Right : Float. Also, the input type should not be Bool if the output
    type is supposed to be Float. Therefore, Left : input.dtype, Op : !=, Right :
    Bool.'
  target: result type Float can't be cast to the desired output type Short
  txt: out.dtype==Float
- cot: 'The error is due to a mismatch in the shape of the ''input'' and ''out'' tensors.
    The ''input'' tensor has shape [6, 8, 6] while the ''out'' tensor has shape [8,
    2, 8].


    Using the rule:'
  target: Trying to resize storage that is not resizable
  txt: out.shape == input.shape
- cot: 'The error occurred because the ''rad2deg'' operation is not supported for
    complex tensors. Here, the ''input'' tensor is of type complex64, which is not
    compatible with the ''rad2deg'' operation. Therefore, the type of the ''input''
    tensor should not be complex. So, the Left : input.dtype should not be complex.
    Op : not in, and Right : [complex64, complex128].'
  target: rad2deg is not supported for complex tensors.
  txt: input.dtype not in ["complex64", "complex128"]
time_cost: 1895.2029769420624
title: torch.rad2deg
tokens_used: 5828
trained: true
