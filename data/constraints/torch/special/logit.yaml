alias: torch.special.logit
constraints:
  eps:
    default: 'null'
    dtype: float
    init: false
    required: false
  input:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 14
package: torch
pass_rate: 1.0
rules:
- cot: 'The error is due to trying to resize a storage that is not resizable. The
    variables in this scenario are ''eps'', ''input'' and ''out''. Now ''eps'' is
    a float value, so it isn''t related to this issue. The ''input'' and ''out'' are
    tensors and their dimensions possibly matter. The dimensions of the ''input''
    and ''out'' tensors are different, so we need to make sure they match. Here, the
    operation would be ''==''. So, the Left : input.shape, the Op : ''=='', and the
    Right : out.shape.'
  target: Trying to resize storage that is not resizable
  txt: input.shape == out.shape
- cot: 'The error occurs because the result type ComplexDouble cannot be cast to the
    desired output type Float. What the args were? The ''eps'' value is a float, ''input''
    and ''out'' are both tensors. The data type (dtype) of ''input'' is complex128
    and ''out'' is float32. Therefore, we need to ensure that the dtype of ''input''
    tensor is not complex number. So, Left : ''input''.dtype, Op : != , Right : complex.
    Also, we can ensure that the dtype of ''out'' tensor is float. So, Left : ''out''.dtype,
    Op : == , Right : float.'
  target: result type ComplexDouble can't be cast to the desired output type Float
  txt: (input.dtype != complex) and (out.dtype == float)
time_cost: 1059.4478931427002
title: torch.special.logit
tokens_used: 8495
trained: true
