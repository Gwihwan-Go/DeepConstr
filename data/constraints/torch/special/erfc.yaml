alias: torch.special.erfc
constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 15
package: torch
pass_rate: 1.0
rules:
- cot: 'The error is indicating that the system is trying to resize a storage that
    is not resizable. This could potentially be caused by a mismatch in the dimensions
    of the input and output tensors. The ''input'' tensor has a shape of [6, 8, 9,
    7, 1, 1, 4] and the ''out'' tensor has a shape of [8, 2, 1, 8, 8, 1, 7]. Therefore,
    the constraint will be to ensure that the ''input'' and ''out'' tensors have the
    same shape. Left: input.shape, Op: ''=='', Right: out.shape.'
  target: Trying to resize storage that is not resizable
  txt: input.shape == out.shape
- cot: 'The error arises due to the mismatch of the data type. The input tensor has
    a data type of float32 and the output tensor has a data type of int8. To prevent
    this error, the data types of the input and output tensors should be the same.
    Therefore, the constraint would be Left : input.dtype, Op : ==, Right : out.dtype'
  target: result type Float can't be cast to the desired output type Char
  txt: (out.dtype==float) and (input.dtype==out.dtype)
time_cost: 2707.3082687854767
title: torch.special.erfc
tokens_used: 9054
trained: true
