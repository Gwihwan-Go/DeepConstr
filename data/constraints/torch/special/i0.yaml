alias: torch.special.i0
constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 20
package: torch
pass_rate: 1.0
rules:
- cot: The error is triggered because the 'out' tensor is not resizable to match the
    shape of the 'input' tensor. The shape of the 'input' tensor is [9, 8, 6, 8] and
    the 'out' tensor shape is [1]. Therefore, this error can be avoided by ensuring
    that 'out' tensor has the same shape as the 'input' tensor. The logical constraint
    would be that the 'out' tensor shape should be equal to the 'input' tensor shape.
  target: Trying to resize storage that is not resizable
  txt: out.shape == input.shape
- cot: 'The error occurs because the output tensor type is Bool while the input tensor
    type is Float. Therefore, the output tensor type should be the same as the input
    tensor type. So, the Left : out.dtype, Op : ==, Right : input.dtype.'
  target: result type Float can't be cast to the desired output type Bool
  txt: (out.dtype == input.dtype)
time_cost: 672.8245556354523
title: torch.special.i0
tokens_used: 9679
trained: true
