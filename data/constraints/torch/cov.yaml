constraints:
  aweights:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
  correction:
    default: 1
    dtype: int
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 7
package: torch
pass_rate: 0.0
rules:
- cot: 'Error is triggered because of the input dimension is larger than expected,
    Let''s see what the args were. The expectation is having two or fewer dimensions,
    but the input has 9 dimensions. Therefore, left : len(input.shape), op : <=, right
    : 2.'
  target: 'cov(): expected input to have two or fewer dimensions but got an input
    with 9 dimensions'
  txt: len(input.shape) <= 2
- cot: 'Error is triggered because ''aweights'' has more than one dimension while
    it is expected to have one or fewer dimensions. Let''s see what the args were.
    The ''aweights'' tensor has 2 dimensions, and is the problem. Therefore, Left
    : ''aweights''.ndims(). It says that expected one or fewer, so Op : <=, and Right
    : 1.'
  target: 'cov(): expected aweights to have one or fewer dimensions but got aweights
    with 2 dimensions'
  txt: aweights.ndims() <= 1
time_cost: 121.92429757118225
title: torch.cov
tokens_used: 3913
skipped: true 
skipped_reason: unsupport constraints (numel)
