constraints:
  dim:
    default: null
    dtype: int
    init: false
    required: true
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 16
package: torch
pass_rate: 1.0
rules:
- cot: 'The error is due to the dimension being out of range. The input tensor''s
    shape is [10], which means it only has 1 dimension. Therefore, the ''dim'' argument
    is expected to be in the range of [-1, 0], but it got a value of 6 from the args,
    which is out of range. So the value of ''dim'' should be corrected to be within
    the range of [-1, 0]. Therefore, Left : dim. Op : >=, and Right : -1. Also, Op
    : <=, and Right : 0.'
  target: Dimension out of range (expected to be in range of [-1, 0], but got 6)
  txt: (dim < input.ndim) or (dim >= -1 and dim <= 0)
- cot: 'The error "Trying to resize storage that is not resizable" indicates that
    the operation is trying to resize a Tensor that does not have a resizable storage.
    Here, the ''input'' tensor has the shape of [9, 8, 6] and the ''out'' tensor has
    the shape of [8, 2, 8]. The ''dim'' value is 0. The ''out'' tensor cannot be resized
    to match the ''input'' tensor because its storage is not resizable. Therefore,
    we need to ensure the dimensions of the ''input'' and ''out'' tensors match or
    that the ''out'' tensor is resizable. In this case, the constraint would be Left:
    input.shape, Op: ==, Right: out.shape.'
  target: Trying to resize storage that is not resizable
  txt: input.shape == out.shape
time_cost: 373.76007175445557
title: torch.cumsum
tokens_used: 9213
