constraints:
  input:
    default: 'null'
    dtype: int32,int64,int8,int16,float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  other:
    default: 'null'
    dtype: int32,int64,int8,int16,float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 21
package: torch
pass_rate: 0.88
rules:
- cot: 'The error is triggered because the result type Float cannot be cast to the
    desired output type Int. This means that the operation performed on ''input''
    and ''other'' is producing a float result, but the ''out'' tensor is expecting
    an integer. Therefore, the operation should be adjusted to produce an integer
    result or the ''out'' tensor should be configured to accept a float. The constraints
    are:


    1. If the operation cannot be adjusted, then the dtype of ''out'' should be float.
    So, Left : out.dtype, Op : ==, Right : float'
  target: result type Float can't be cast to the desired output type Int
  txt: (out.dtype==other.dtype) and (out.dtype==float)
- cot: The error message "Trying to resize storage that is not resizable" is suggesting
    that there's an attempt to change the size of a tensor that cannot be resized.
    In this context, 'input', 'other', and 'out' are tensors with different dimensions.
    Let's check the dimensions of tensors. As per the provided values, 'input' is
    a tensor with 10 dimensions, 'other' is a tensor with 7 dimensions, and 'out'
    is a tensor with no dimension. This mismatch in dimensions while performing operations
    could be causing the error. Therefore, the dimensions of these tensors should
    match or be compatible as per the operation requirements. Thus, the constraint
    here is that the dimensions of the tensors should be compatible.
  target: Trying to resize storage that is not resizable
  txt: ((input.shape == other.shape) and (out.shape == other.shape) and (out.dim == input.dim) and len(input.shape) == len(other.shape))
time_cost: 3156.905944108963
title: torch._C._special.special_xlog1py
tokens_used: 14444
trained: true
