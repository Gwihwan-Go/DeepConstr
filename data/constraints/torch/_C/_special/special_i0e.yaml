constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 19
package: torch
pass_rate: 0.98
rules:
- cot: 'The error occurs because we are trying to resize ''out'' tensor storage that
    is not resizable. Let''s examine the values of ''input'' and ''out''. The ''input''
    tensor shape is [8, 4, 2] and the ''out'' tensor shape is [1, 6]. These shapes
    should match to prevent the error. Therefore, Left : out.shape, out.rank, Op :
    ==, and Right : input.shape, input.rank.'
  target: Trying to resize storage that is not resizable
  txt: ((input.shape == [8, 4, 2]) and (out.rank==input.rank and all(out.shape[i]==input.shape[i]
    for i in range(out.rank)))) or ((out.rank==input.rank and all(out.shape[i]==input.shape[i]
    for i in range(out.rank))) and (out.shape == [1, 6])) or ((input.shape == [8,
    4, 2]) and (out.rank==input.rank and all(out.shape[i]==input.shape[i] for i in
    range(out.rank))))
- cot: 'The error is due to an improper type conversion. What the args were? The output
    tensor ''out'' is expected to be in the format float32, but the input tensor ''input''
    is in format complex128. Converting from complex128 to float32 is not allowed
    by the library. Therefore, the constraint should be input.dtype Op : == Right
    : tf.float32 and out.dtype Op : == Right : tf.complex128'
  target: result type ComplexDouble can't be cast to the desired output type Float
  txt: (out.dtype==Float32) or (out.dtype == tf.complex128)
time_cost: 2072.2350928783417
title: torch._C._special.special_i0e
tokens_used: 9420
trained: true
