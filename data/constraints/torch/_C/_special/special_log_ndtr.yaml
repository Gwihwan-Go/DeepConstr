constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 16
package: torch
pass_rate: 0.97
rules:
- cot: 'The error is triggered because the output type Bool cannot be cast to the
    result type Float. What the args were? The input and output are both of type Bool.
    However, the operation performed might be returning a Float. Therefore, the operation
    should be adjusted to return a Bool, or the output type should be changed to Float.
    Therefore, Left : type(out) or type(result of operation). Op : == Right : Float'
  target: result type Float can't be cast to the desired output type Char
  txt: type(out)==Float
- cot: "The error is triggered because an attempt is made to resize a storage that\
    \ is not resizable. Looking at the input and output tensor shapes, they are not\
    \ matching. The 'input' tensor shape is [6,8,6,8,1,3] and 'out' tensor shape is\
    \ [2,8]. Therefore, the 'input' tensor shape needs to be matched with the 'out'\
    \ tensor shape to avoid resizing of storage. Hence, the symbolic relationship\
    \ constraint could be the dimensionality or length of the 'input' tensor should\
    \ be the same as that of the 'out' tensor. \n\nLeft : len(input) or input.shape,\
    \ Op : ==, Right : len(out) or out.shape."
  target: Trying to resize storage that is not resizable
  txt: input.shape == out.shape
time_cost: 1022.8425314426422
title: torch._C._special.special_log_ndtr
tokens_used: 9570
trained: true
