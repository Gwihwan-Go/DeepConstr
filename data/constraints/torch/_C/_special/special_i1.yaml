constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 10
package: torch
pass_rate: 0.95
rules:
- cot: 'The error is because the output tensor dtype is expected to be ''float32''
    but it''s ''int8'' which is causing the issue. What the args were? The input tensor
    dtype is ''float32'' and the output tensor dtype is ''int8''. Therefore, Left
    : out.dtype, Op : ==, Right : ''float32'''
  target: result type Float can't be cast to the desired output type Short
  txt: out.dtype == 'float32'
- cot: The error is due to trying to resize a storage that is not resizable. This
    can occur if the 'out' tensor size does not match the 'input' tensor size. Therefore,
    the dimensions of the 'input' and 'out' tensors should be equal. We can enforce
    this constraint by setting the shape of 'out' to be the same as the shape of 'input'.
  target: Trying to resize storage that is not resizable
  txt: input.shape == out.shape
time_cost: 488.78196120262146
title: torch._C._special.special_i1
tokens_used: 5874
trained: true
