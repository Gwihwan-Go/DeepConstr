constraints:
  A:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  full_matrices:
    default: 'true'
    dtype: bool
    init: false
    required: false
infered_history: []
infered_times: 8
package: torch
pass_rate: 1.0
rules:
- cot: 'The error is thrown because the input tensor A has less than 2 dimensions.
    The arguments show that ''A'' is a tensor with dtype float32 and it has no dimensions
    (0 dimensions), but for the linalg.svd function, it should have at least 2 dimensions.
    Hence, the constraints are:'
  target: 'linalg.svd: The input tensor A must have at least 2 dimensions.'
  txt: len(A.shape) >= 2
- cot: 'The error arises because the function linalg.svd expects a floating point
    or complex tensor as input, but is receiving a boolean tensor. Let''s see what
    the args were. The ''A'' tensor is of type boolean, which is the problem. Therefore,
    Left : A.dtype, which is the type of tensor A, should be corrected. It says that
    should be a floating point or complex tensor, so Op : in, and Right : [float,
    complex].'
  target: 'linalg.svd: Expected a floating point or complex tensor as input. Got Bool'
  txt: A.dtype in [float, complex]
time_cost: 125.80157566070557
title: torch._C._linalg.linalg_svd
tokens_used: 4947
trained: true
