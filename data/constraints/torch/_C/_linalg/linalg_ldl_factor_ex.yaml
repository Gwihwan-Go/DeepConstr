constraints:
  check_errors:
    default: false
    dtype: bool
    init: false
    required: false
  hermitian:
    default: false
    dtype: bool
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 5
package: torch
pass_rate: 1.0
rules:
- cot: 'Based on the given values, the error arises because torch.linalg.ldl_factor_ex
    function expects either a floating point or a complex tensor as input, but it
    got a Boolean tensor. So, it generates error because of incompatible tensor data
    type. Let''s see what the args were. The input tensor is of boolean type, however
    it should be either floating point or complex type. Therefore, Left : type(input),
    should be corrected. It says that should be either float or complex, so Op : in,
    and Right : [float, complex].'
  target: 'torch.linalg.ldl_factor_ex: Expected a floating point or complex tensor
    as input. Got Long'
  txt: type(input) in [float, complex]
- cot: 'The error is caused because the input tensor is not a square matrix, but the
    function torch.linalg.ldl_factor_ex expects batches of square matrices as input.
    Hence, the input tensor''s shape should be corrected. In this case, Left : input.shape[0]
    (number of rows) should be equal to input.shape[1] (number of columns). Therefore,
    Op : ==, and Right : input.shape[1].'
  target: 'torch.linalg.ldl_factor_ex: A must be batches of square matrices, but they
    are 9 by 8 matrices'
  txt: (input.shape[-2] == input.shape[-1]) and (input.shape[0] == input.shape[1])
- cot: 'Error is triggered because the input tensor A doesn''t have at least 2 dimensions.
    It expects to have at least 2 dimensions on input tensor A. Let''s see what the
    args were. It seems input is a tensor with TensorDType.int32, and it''s dimension
    is missing in the argument. So the dimension of input should be corrected. Therefore,
    Left : input.dim. It says that expected at least 2 dimensions, so Op >=, and Right
    : 2.'
  target: 'torch.linalg.ldl_factor_ex: The input tensor A must have at least 2 dimensions.'
  txt: input.dim >= 2
time_cost: 159.32397961616516
title: torch._C._linalg.linalg_ldl_factor_ex
tokens_used: 2865
