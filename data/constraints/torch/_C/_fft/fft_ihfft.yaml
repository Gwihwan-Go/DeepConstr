constraints:
  dim:
    default: '-1'
    dtype: int
    init: false
    required: false
  input:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  n:
    default: 'null'
    dtype: int
    init: false
    required: false
  norm:
    default: 'null'
    dtype: Literal['ortho', 'backward', 'forward']
    init: false
    required: false
  out:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 6
package: torch
pass_rate: 0.0
rules:
- cot: 'The error arises because the function expects a complex output tensor, but
    a float tensor is provided. Therefore, the ''out'' tensor should be of complex
    type. Let''s see what the args were. The ''out'' tensor is of type float32. Therefore,
    Left : out.dtype, which is the type of tensor ''out'', should be corrected. It
    says that should be of complex type, so Op : ==, and Right : Complex. The constraint
    would be as follows:'
  target: ihfft expects a complex output tensor, but got Float
  txt: out.dtype== Complex
- cot: "The error is caused because the dtype of the output tensor 'out' does not\
    \ match the expected dtype. The function expected the output tensor to be of dtype\
    \ 'ComplexFloat', however, the dtype of the provided output tensor 'out' is 'ComplexDouble'.\
    \ \n\nThe constraint for the 'out' tensor dtype can be expressed as:"
  target: Found dtype ComplexDouble but expected ComplexFloat
  txt: input.dtype == 'ComplexFloat'
time_cost: 171.57311964035034
title: torch._C._fft.fft_ihfft
tokens_used: 4406
