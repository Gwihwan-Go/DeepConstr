alias: torch.lt
constraints:
  input:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  other:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool,float
    init: false
    required: true
  out:
    default: 'null'
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 35
package: torch
pass_rate: 0.3
rules:
- cot: 'This error arises when attempting to resize a tensor storage that is not resizable.
    This happens because the ''input'' and ''other'' tensors have different dimensions.
    The ''input'' tensor has a size of 1 and the ''other'' tensor has a size of 7,
    which results in a mismatch. Therefore, to prevent this error, the sizes of ''input''
    and ''other'' must be the same. Consequently, Left : len(input), Op : ==, and
    Right : len(other).'
  target: Trying to resize storage that is not resizable
  txt: len(input)==len(other)
- cot: 'Error is triggered because size of tensors at non-singleton dimension 6 doesn''t
    match between tensor ''input'' and tensor ''other''. It seems like a broadcasting
    request. Broadcasting in tensor operations requires that the trailing dimensions
    of the tensors are either 1 or the same. Therefore, we revise the constraints
    as follows:'
  target: The size of tensor a (3) must match the size of tensor b (10) at non-singleton
    dimension 2
  txt: all(input.shape[i] == other.shape[i] or input.shape[i] == 1 or other.shape[i]
    == 1 for i in range(-1, -min(len(input.shape), len(other.shape))-1, -1))
- cot: The error is due to a negative dimension being present in the 'other' tensor.
    In order to prevent this, the tensor 'other' needs to be checked to ensure all
    dimensions are non-negative. Therefore, the Left is the minimum value of the 'other'
    tensor, and the Right is zero. The operation is 'greater than or equal to'.
  target: negative dimensions are not allowed
  txt: min(other) >= 0
time_cost: 3511.51869058609
title: torch.lt
tokens_used: 20303
trained: true
