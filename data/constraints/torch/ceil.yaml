alias: torch.ceil
constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  out:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: false
infered_history: []
infered_times: 24
package: torch
pass_rate: 0.95
rules:
- cot: 'The error is triggered because the ''out'' tensor is being resized, but it
    is not resizable. Looking at the provided values, the ''out'' tensor currently
    has dimensions [8,2,10] while the ''input'' tensor has dimensions [6,8,6,6,1,3,4,1,3,2].
    This implies that the ''out'' tensor dimensions should match the ''input'' tensor
    dimensions to avoid the error. Therefore, left : out.shape, out.rank op : == right
    : input.shape, input.rank'
  target: Trying to resize storage that is not resizable
  txt: out.rank==input.rank and all(out.shape[i]==input.shape[i] for i in range(out.rank))
- cot: 'The error is caused because the output tensor (''out'') is of type ''int8''
    (Char) but a ''float32'' (Float) tensor is expected. Therefore, the type of the
    output tensor should be corrected to match that of the input tensor. The Left
    : out.dtype should be corrected, Op : ==, and Right : input.dtype.'
  target: Found dtype Char but expected Float
  txt: out.dtype == input.dtype
time_cost: 989.6871871948242
title: torch.ceil
tokens_used: 14342
trained: true
