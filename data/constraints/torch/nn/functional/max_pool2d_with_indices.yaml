constraints:
  ceil_mode:
    default: false
    dtype: bool
    init: false
    required: false
  dilation:
    default: 1
    dtype: int
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  kernel_size:
    default: null
    dtype: int,list[int]
    init: false
    required: true
  padding:
    default: 0
    dtype: int
    init: false
    required: false
  return_indices:
    default: false
    dtype: bool
    init: false
    required: false
  stride:
    default: kernel_size
    dtype: int,list[int]
    init: false
    required: false
infered_history: []
infered_times: 46
package: torch
pass_rate: 0.1
rules:
- cot: Error occurs because the padding is greater than half of the kernel size. Here
    kernel size is negative, which is unusual. Arguments are 'pad' and 'kernel_size'.
    So, the padding should be less than or equal to half the kernel size and the kernel
    size should be greater than 0. Therefore, the constraints should be 'kernel_size
    > 0' and 'padding <= kernel_size / 2'.
  target: pad should be at most half of kernel size, but got pad=8 and kernel_size=7
  txt: padding <= kernel_size / 2
- cot: 'The error is triggered because calculated output size is negative, which is
    impossible. Let''s see what the args were. The kernel size is larger than the
    input size which leads to negative output size. To prevent this error, the kernel
    size should be less than or equal to the input size in all dimensions. Therefore,
    Left : input[i], op : >=, right : kernel_size[i].'
  target: 'Given input size: (10x9x8). Calculated output size: (10x-15x-19). Output
    size is too small'
  txt: all(input[i]>=kernel_size[i] for i in range(len(kernel_size)))
- cot: 'The error is because one of the elements in the ''stride'' list is zero, which
    is not allowed. In the given values, the ''stride'' value is a list ''[0, 5]''.
    The stride values should be greater than zero. Therefore, Left : strides which
    is the stride value should be corrected. It says that cannot be 0. So, Op : !=,
    and Right : 0. Also, it should be greater than 0, so Op : >, and Right : 0.'
  target: stride should not be zero
  txt: stride>0
- cot: 'Error is triggered because the input tensor is not 3D or 4D as expected. So,
    we have to ensure the dimensions of the input tensor are either 3 or 4. Therefore,
    Left : input.ndims(). It says that expected 3 or 4, so Op : ==, and Right : 3
    or 4. Also, It implies that these are the only possible dimensions allowed, so
    Op : !=, and Right : anything other than 3 or 4.'
  target: non-empty 3D or 4D (batch mode) tensor expected for input
  txt: input.ndims() == 3 or input.ndims() == 4
- cot: "The error indicates that the 'kernel_size' argument is required to be either\
    \ a single integer or a tuple of two integers. But here, 'kernel_size' is a list\
    \ of three integers. Therefore, constraints need to be set to ensure 'kernel_size'\
    \ is either a single integer or a tuple of two integers. \n\nSo, Left: len(kernel_size),\
    \ Op: in, Right: [1, 2]."
  target: 'max_pool2d: kernel_size must either be a single int, or a tuple of two
    ints'
  txt: len(kernel_size) in [1, 2]
time_cost: 1165.7141132354736
title: torch.nn.functional.max_pool2d_with_indices
tokens_used: 31096
trained: true
