alias: torch.nn.functional.mse_loss
constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  reduce:
    default: null
    dtype: bool
    init: false
    required: false
  reduction:
    default: mean
    dtype: Literal['none', 'mean', 'sum']
    init: false
    required: false
  size_average:
    default: null
    dtype: bool
    init: false
    required: false
  target:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 7
package: torch
pass_rate: 0.97
rules:
- cot: 'Error is triggered because the size of tensor a (10) doesn''t match the size
    of tensor b (8) at non-singleton dimension 3. Looking at the input values, the
    input tensor has shape [10] and target tensor has shape [1, 6, 2, 8]. However,
    the sizes of these two tensors should match at non-singleton dimension 3, but
    they are 10 and 8 respectively which are causing the error. We can revise the
    constraints as follow:'
  target: The size of tensor a (10) must match the size of tensor b (8) at non-singleton
    dimension 3
  txt: (all(input.shape[i] == target.shape[i] or input.shape[i] == 1 or target.shape[i]
    == 1 for i in range(-1, -min(len(input.shape), len(target.shape))-1, -1)))
time_cost: 464.92710065841675
title: torch.nn.functional.mse_loss
tokens_used: 5181
trained: true
