constraints:
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  log_target:
    default: false
    dtype: bool
    init: false
    required: false
  reduce:
    default: true
    dtype: bool
    init: false
    required: false
  size_average:
    default: true
    dtype: bool
    init: false
    required: false
  target:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 16
package: torch
pass_rate: 1.0
rules:
- cot: 'Based on the given values, the error is triggered because the size of tensor
    ''a'' does not match the size of tensor ''b'' at non-singleton dimension 2. It
    seems that ''input'' and ''target'' tensors do not have matching sizes in their
    respective dimensions. Therefore, Left: input.shape[i], Op: ==, Right: target.shape[i]
    for i in range(min(len(input.shape), len(target.shape))).'
  target: The size of tensor a (2) must match the size of tensor b (9) at non-singleton
    dimension 2
  txt: (all(input.shape[i] == target.shape[i] or input.shape[i] == 1 or target.shape[i]
    == 1 for i in range(-1, -min(len(input.shape), len(target.shape))-1, -1))) and
    ((input.shape[1] == target.shape[1]) and (input.shape[2] == target.shape[2]))
- cot: 'The error is due to invalid input types. The kl_div function does not support
    complex inputs. Therefore, the type of the ''input'' and ''target'' tensors should
    not be complex. Op: !=, Right: complex.'
  target: 'kl_div: Complex inputs not supported.'
  txt: type(input)!=complex and type(target)!=complex
- cot: 'The error is due to incompatible data types and shapes in the input dictionaries.
    The input is of type int8 and the target is of type float16. The kl_div function
    does not support integral inputs. Thus, the data type of ''input'' should be of
    float type, not of integral type. Op : == , and Right : float. Also, the shapes
    of ''input'' and ''target'' tensors should be compatible for kl_div operation.
    Therefore, ''input'' and ''target'' should have the same shape. Op : ==, and Right
    : input.shape.'
  target: 'kl_div: Integral inputs not supported.'
  txt: (target.dtype == float) and (type(input.dtype) == float and input.shape ==
    target.shape)
time_cost: 1155.705461025238
title: torch.nn.functional.kl_div
tokens_used: 11859
trained: true
