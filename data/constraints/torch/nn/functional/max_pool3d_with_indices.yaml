constraints:
  ceil_mode:
    default: false
    dtype: bool
    init: false
    required: false
  dilation:
    default: 1
    dtype: int
    init: false
    required: false
  input:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  kernel_size:
    default: null
    dtype: int,list[int]
    init: false
    required: true
  padding:
    default: 0
    dtype: int
    init: false
    required: false
  return_indices:
    default: false
    dtype: bool
    init: false
    required: false
  stride:
    default: null
    dtype: int,list[int]
    init: false
    required: false
infered_history: []
infered_times: 50
package: torch
pass_rate: 0.88
rules:
- cot: 'Error is triggered because padding is not at most half of kernel size. It
    seems that padding is equal to kernel size, which is not a valid condition. In
    this case, pad should be less than or equal to half of kernel size. Therefore,
    we can revise the constraints as follows:'
  target: pad should be at most half of kernel size, but got pad=1 and kernel_size=1
  txt: padding <= kernel_size / 2
- cot: 'The error implies that the input tensor should be 4D or 5D. In this case,
    the input tensor is 3D. Let''s see what the args were. It seems ''input'' tensor
    with shape [8, 6, 9] is the problem. Therefore, the number of dimensions of input
    tensor should be corrected, which is input.ndims(). Therefore, Left : input.ndims().
    It says that expected 4 or 5, so Op : ==, and Right : 4 or 5. Also, it implies
    that dimension cannot be 3, so Op : !=, and Right : 3.'
  target: non-empty 4D or 5D (batch mode) tensor expected for input
  txt: (input.ndims() == 4) or (input.ndims() == 5) or (input.ndims() == 4)
- cot: "The error is associated with the 'kernel_size' argument in the max_pool3d\
    \ function. The 'kernel_size' must be either a single int or a tuple of three\
    \ ints. In the given values, 'kernel_size' is an empty list, which does not satisfy\
    \ the requirement. Therefore, we need to check if 'kernel_size' is either a single\
    \ int or a tuple of three ints. \n\nFor 'kernel_size' to be a single int:"
  target: 'max_pool3d: kernel_size must either be a single int, or a tuple of three
    ints'
  txt: ((len(stride) == 1) and (len(kernel_size) == 3)) or ((len(kernel_size) == len(stride))
    and (len(stride)==3)) or ((len(stride) == 1) and (len(kernel_size) == 3))
- cot: "Error is triggered because the calculated output size is too small. This is\
    \ likely due to the combination of kernel_size, stride, padding and dilation values\
    \ that are being used for the given input size. \n\nKernel size, stride, padding\
    \ and dilation are all parameters that determine the size of the output. In particular,\
    \ a larger kernel size, larger stride or smaller padding can lead to smaller output\
    \ size. \n\nIn this case, the stride values are [15, 16, 17] which are larger\
    \ than the corresponding dimensions of the input size, leading to a calculated\
    \ output size of (9x0x0x0). \n\nTherefore, the constraints should ensure that\
    \ the stride values are smaller than the corresponding dimensions of the input\
    \ size. For example:"
  target: 'Given input size: (9x8x6x8). Calculated output size: (9x0x0x0). Output
    size is too small'
  txt: kernel_size * dilation + padding < min(input.shape)
- cot: "The error occurs because the provided dilation value is zero, but it should\
    \ be greater than zero. Let's see what the args were. It appears dilation was\
    \ set to 0, which is not an acceptable value. To prevent this error in the future\
    \ and generate constraints that do not trigger it, we need to ensure that the\
    \ 'dilation' value is always greater than zero. \n\nThe constraint for the 'dilation'\
    \ parameter can be expressed as:"
  target: 'dilation should be greater than zero, but got dilationT: 0 dilationH: 0
    dilationW: 0'
  txt: dilation > 0
- cot: 'Error is triggered because of negative padding value. Let''s see what the
    args were. It seems the ''padding'' has a negative value. Therefore, Left : padding.
    It implies that negative values are problem, so Op : >=, and Right : 0.'
  target: 'pad must be non-negative, but got pad: -1'
  txt: padding >= 0
- cot: 'The error is triggered because the kernel size is not greater than zero. Let''s
    see what the args were. It appears that ''kernel_size'' is 0, which is not a valid
    value. Therefore, ''kernel_size'' should be corrected. It says it should be greater
    than zero, so Operation : > and Right : 0.'
  target: 'kernel size should be greater than zero, but got kT: 0 kH: 0 kW: 0'
  txt: kernel_size > 0
time_cost: 1986.7117774486542
title: torch.nn.functional.max_pool3d_with_indices
tokens_used: 30315
trained: true
