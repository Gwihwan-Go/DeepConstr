alias: torch.nn.PairwiseDistance
constraints:
  eps:
    default: 1.0e-06
    dtype: float
    init: true
    required: false
  keepdim:
    default: false
    dtype: bool
    init: true
    required: false
  p:
    default: 2.0
    dtype: float
    init: true
    required: false
  x1:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
  x2:
    default: null
    dtype: float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
    init: false
    required: true
infered_history: []
infered_times: 7
package: torch
pass_rate: 0.97
rules:
- cot: 'Error is triggered because the size of tensors at non-singleton dimension
    8 doesn''t match. What the args were? It''s the sizes of x1 and x2. We see that
    x1 is of size [6] and x2 is of size [8, 8, 8, 8, 8, 8, 8, 8, 0]. Broadcasting
    in tensor operations requires that the trailing dimensions of the tensors are
    either 1 or the same. We start from the last dimension because broadcasting aligns
    dimensions from the end. Therefore, we can revise the constraints as follows:'
  target: The size of tensor a (6) must match the size of tensor b (0) at non-singleton
    dimension 8
  txt: all(x1.shape[i] == x2.shape[i] or x1.shape[i] == 1 or x2.shape[i] == 1 for
    i in range(-1, -min(len(x1.shape), len(x2.shape))-1, -1))
time_cost: 364.4004645347595
title: torch.nn.PairwiseDistance
tokens_used: 5122
trained: true
