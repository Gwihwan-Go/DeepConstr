args:
  dtype:
  - Tensor
  - Optional[List[int]]
  - bool
  - None
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  - false
  name:
  - self
  - dim
  - keepdim
  - dtype
  - out
  required:
  - true
  - false
  - false
  - false
  - true
name: torch.mean
package: torch
pass_rate: 100
rules:
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: None
        dtype: None
        keepdim: bool
        out: tensor
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(self)==dtype(out)
  - f1_score: 69.80802792321118
    overall_score: 100
    precision: 100.0
    recall: 53.61930294906166
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        dim: None
        dtype: None
        keepdim: bool
        out: tensor
        self: tensor
      msg: 'mean(): could not infer output dtype. Input dtype must be either a floating
        point or complex dtype. Got: Int'
      package: torch
    txt: dtype(self) == torch.float64
  - f1_score: 68.14310051107324
    overall_score: 100
    precision: 100.0
    recall: 51.67958656330749
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        dim: None
        dtype: None
        keepdim: bool
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank==self.rank and all(out.shape[i]==self.shape[i] for i in range(out.rank))
  - f1_score: 67.45362563237775
    overall_score: 100
    precision: 100.0
    recall: 50.89058524173028
