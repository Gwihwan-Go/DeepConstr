args:
  dtype:
  - Tensor
  - Tensor
  is_pos:
  - false
  - false
  name:
  - x
  - out
  required:
  - true
  - true
name: torch._C._special.special_scaled_modified_bessel_k0
package: torch
pass_rate: 100
rules:
- - cot: '`out` tensor shape should be matched with the operation results. In this
      operation, the result shape is `x.shape`. Therefore, the constraint to prevent
      the error is:'
    length: 1
    target:
      choosen_dtype:
        out: tensor
        x: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: out.rank == x.rank and all(out.shape[i] == x.shape[i] for i in range(out.rank))
  - f1_score: 74.90636704119851
    overall_score: 100
    precision: 100.0
    recall: 59.88023952095809
- - cot: 'The error is triggered because result type Float cannot be cast to the Int.
      Let''s see what the args were. The dtype of ''out'' is Int and the dtype of
      ''x'' is Float. Therefore, the dtypes of two arguments should be consistent.
      Left : dtype(out), Op : ==, Right : dtype(x)'
    length: 1
    target:
      choosen_dtype:
        out: tensor
        x: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: dtype(out)==dtype(x)
  - f1_score: 86.23853211009174
    overall_score: 50.0
    precision: 94.0
    recall: 79.66101694915254
- - cot: synthesized
    length: 3
    target:
      choosen_dtype:
        out: tensor
        x: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: ((dtype(x)==dtype(out)) or (dtype(x) == Int)) and (dtype(out)==torch.float)
  - f1_score: 97.91666666666666
    overall_score: 100
    precision: 100.0
    recall: 95.91836734693877
