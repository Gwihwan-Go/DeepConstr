args:
  dtype:
  - Tensor
  - int
  - int
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - start_dim
  - end_dim
  required:
  - true
  - false
  - false
name: torch.Tensor.flatten
package: torch
pass_rate: 0.8
rules:
- - cot: synthesized
    length: 3
    target:
      choosen_dtype:
        end_dim: int
        self: tensor
        start_dim: int
      msg: Dimension out of range (expected to be in range of [-2, 1], but got 99)
      package: torch
    txt: ((start_dim >= -len(self.shape) and start_dim < len(self.shape)) and (end_dim
      >= -len(self.shape))) and (start_dim >= 0)
  - f1_score: 94.82926829268293
    overall_score: 49.6
    precision: 97.2
    recall: 92.57142857142856
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        end_dim: int
        self: tensor
        start_dim: int
      msg: negative dimensions are not allowed
      package: torch
    txt: end_dim >= 0
  - f1_score: 66.66666666666667
    overall_score: 100
    precision: 100.0
    recall: 50.0
