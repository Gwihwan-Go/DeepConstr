args:
  dtype:
  - int32,int64
  - bool
  - str
  - bool
  - float16,float32,float64,uint8,complex64,complex128,int8,int16,int32,int64,bool
  is_pos:
  - false
  - false
  - false
  - false
  - false
  name:
  - axis
  - exclusive
  - name
  - reverse
  - x
  required:
  - true
  - false
  - false
  - false
  - true
name: tf.raw_ops.Cumprod
package: tensorflow
pass_rate: 0.0
rules:
- - cot: The error arises because the attribute 'Tidx' is a float, but it is expected
      to be one of int32 or int64. The 'axis' tensor is provided as a float32, which
      is not compatible. So, the dtype(axis) should be corrected to match one of the
      allowed types.
    length: 1
    target:
      choosen_dtype:
        axis: tensor
        exclusive: bool
        name: str
        reverse: bool
        x: tensor
      msg: "Value for attr 'Tidx' of float is not in the list of allowed values: int32,\
        \ int64\n\t; NodeDef: {{node Cumprod}}; Op<name=Cumprod; signature=x:T, axis:Tidx\
        \ -> out:T; attr=exclusive:bool,default=false; attr=reverse:bool,default=false;\
        \ attr=T:type,allowed=[DT_FLOAT, DT_DOUBLE, DT_INT32, DT_UINT8, DT_INT16,\
        \ 10440210506161272279, DT_UINT16, DT_COMPLEX128, DT_HALF, DT_UINT32, DT_UINT64];\
        \ attr=Tidx:type,default=DT_INT32,allowed=[DT_INT32, DT_INT64]> [Op:Cumprod]\
        \ name: yANO"
      package: tensorflow
    txt: dtype(axis) in ["int32", "int64"]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'axis must be a scalar, not [1,1]. Therefore, the constraint to prevent the
      error is:'
    length: 1
    target:
      choosen_dtype:
        axis: tensor
        exclusive: bool
        name: str
        reverse: bool
        x: tensor
      msg: '{{function_node __wrapped__Cumprod_device_/job:localhost/replica:0/task:0/device:CPU:0}}
        ScanOp: axis must be a scalar, not [1,1] [Op:Cumprod] name: paIt'
      package: tensorflow
    txt: axis.dim == 0
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
