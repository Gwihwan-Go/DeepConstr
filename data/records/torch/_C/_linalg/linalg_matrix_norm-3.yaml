args:
  dtype:
  - Tensor
  - str
  - List[int]
  - bool
  - None
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  - false
  - false
  name:
  - self
  - ord
  - dim
  - keepdim
  - dtype
  - out
  required:
  - true
  - false
  - false
  - false
  - false
  - true
name: torch._C._linalg.linalg_matrix_norm
package: torch
pass_rate: 0.0
rules:
- - cot: synthesized
    length: 4
    target:
      choosen_dtype:
        dim: list[int]
        dtype: None
        keepdim: bool
        ord: str
        out: tensor
        self: tensor
      msg: 'linalg.matrix_norm: Order Hmtd not supported.'
      package: torch
    txt: ((ord == "Fro") or (ord in ["fro", "nuc"])) and ((ord == "Nuc") or (ord in
      ['fro', 'nuc', 'inf', 'ninf', '1', '2', '0']))
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
- - cot: 'The error occurs because the `dim` argument is not a 2-tuple as expected.
      Instead, it contains the values [-2, -4, -3, -3, -3, -3, -3, -3, -3]. To prevent
      this error, the `dim` argument should be a 2-tuple. Therefore, the constraint
      can be formulated as follows:'
    length: 1
    target:
      choosen_dtype:
        dim: list[int]
        dtype: None
        keepdim: bool
        ord: str
        out: tensor
        self: tensor
      msg: 'linalg.matrix_norm: dim must be a 2-tuple. Got -2 -4 -3 -3 -3 -3 -3 -3
        -3'
      package: torch
    txt: len(dim) == 2
  - f1_score: 98.3284169124877
    overall_score: 100
    precision: 100.0
    recall: 96.71179883945841
- - cot: 'Based on the given runtime information, the error occurs because the function
      `torch._C._linalg.linalg_matrix_norm` expects a floating point or complex tensor
      as input, but it received an integer tensor instead.


      To prevent this error, the input tensor `self` should be converted to a floating
      point or complex tensor. Therefore, the constraint that should be added is:'
    length: 1
    target:
      choosen_dtype:
        dim: list[int]
        dtype: None
        keepdim: bool
        ord: str
        out: tensor
        self: tensor
      msg: 'linalg.matrix_norm: Expected a floating point or complex tensor as input.
        Got Int'
      package: torch
    txt: dtype(self) in [torch.float32, torch.float64, torch.complex64, torch.complex128]
  - f1_score: 100.0
    overall_score: 100
    precision: 100.0
    recall: 100.0
