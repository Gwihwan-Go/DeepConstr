args:
  dtype:
  - Tensor
  - Tensor
  - number
  - Tensor
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - other
  - alpha
  - out
  required:
  - true
  - true
  - false
  - true
name: torch.add
package: torch
pass_rate: 98.30508474576271
rules:
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        alpha: int
        other: tensor
        out: tensor
        self: tensor
      msg: result type Float can't be cast to the desired output type Int
      package: torch
    txt: (dtype(other)==dtype(out)) or (dtype(self) == float32)
  - f1_score: 84.25531914893617
    overall_score: 48.12765957446808
    precision: 100.0
    recall: 72.79411764705883
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        alpha: int
        other: tensor
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: (self.rank==other.rank) and (other.rank==out.rank and all(other.shape[i]==out.shape[i]
      for i in range(other.rank)))
  - f1_score: 69.93006993006993
    overall_score: 40.96503496503497
    precision: 100.0
    recall: 53.76344086021506
- - cot: ''
    length: 1
    target:
      choosen_dtype:
        alpha: int
        other: tensor
        out: tensor
        self: tensor
      msg: The size of tensor a (4) must match the size of tensor b (9) at non-singleton
        dimension 1
      package: torch
    txt: self.shape[3] == other.shape[3]
  - f1_score: 75.47169811320754
    overall_score: 100
    precision: 100.0
    recall: 60.60606060606061
