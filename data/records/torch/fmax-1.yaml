args:
  dtype:
  - Tensor
  - Tensor
  - Tensor
  is_pos:
  - true
  - false
  - false
  name:
  - self
  - other
  - out
  required:
  - true
  - true
  - true
name: torch.fmax
package: torch
pass_rate: 56.043956043956044
rules:
- - cot: 'Based on the given runtime information, the error is triggered because the
      size of tensor `a` (9) does not match the size of tensor `b` (5) at non-singleton
      dimension 6. To prevent this error, we can formulate the following constraint:'
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: The size of tensor a (6) must match the size of tensor b (9) at non-singleton
        dimension 1
      package: torch
    txt: self.shape[6] == other.shape[6]
  - f1_score: 76.92307692307692
    overall_score: 100
    precision: 100.0
    recall: 62.5
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: all(self.shape[i]==out.shape[i] for i in range(self.rank))
  - f1_score: 58.16207832493214
    overall_score: 35.25806451612903
    precision: 64.51612903225806
    recall: 52.947405577126716
- - cot: synthesized
    length: 2
    target:
      choosen_dtype:
        other: tensor
        out: tensor
        self: tensor
      msg: Trying to resize storage that is not resizable
      package: torch
    txt: (out.rank == self.rank and all(out.shape[i] == self.shape[i] for i in range(out.rank)))
      and (out.rank == other.rank)
  - f1_score: 74.01360544217687
    overall_score: 100
    precision: 100.0
    recall: 58.747300215982726
