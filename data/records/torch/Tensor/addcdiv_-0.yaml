args:
  dtype:
  - Tensor
  - Tensor
  - Tensor
  - number
  is_pos:
  - true
  - false
  - false
  - false
  name:
  - self
  - tensor1
  - tensor2
  - value
  required:
  - true
  - true
  - true
  - false
name: torch.Tensor.addcdiv_
package: torch
pass_rate: 41.52173913043478
rules:
- - cot: divided
    target:
      choosen_dtype:
        self: tensor
        tensor1: tensor
        tensor2: tensor
        value: int
      msg: output with shape [1] doesn't match the broadcast shape [9, 9, 9]
      package: torch
    txt: self.dim() == tensor1.dim() == tensor2.dim()
  - f1_score: 81.80300500834726
    overall_score: 45.90150250417363
    precision: 100.0
    recall: 69.2090395480226
- - cot: ''
    target:
      choosen_dtype:
        self: tensor
        tensor1: tensor
        tensor2: tensor
        value: int
      msg: The size of tensor a (8) must match the size of tensor b (5) at non-singleton
        dimension 2
      package: torch
    txt: self.shape[0] == tensor1.shape[0] and self.shape[0] == tensor2.shape[0] and
      tensor1.shape[0] == tensor2.shape[1]
  - f1_score: 63.419120758826544
    overall_score: 36.709560379413276
    precision: 47.4468085106383
    recall: 95.60232047770538
