args:
  dtype:
  - Tensor
  - Tensor
  - List[int]
  - List[int]
  - Optional[int]
  is_pos:
  - true
  - false
  - false
  - false
  - false
  name:
  - self
  - src
  - size
  - stride
  - storage_offset
  required:
  - true
  - true
  - true
  - true
  - false
name: torch.Tensor.as_strided_scatter
package: torch
pass_rate: 0.0
rules:
- - cot: ''
    target:
      choosen_dtype:
        self: tensor
        size: list[int]
        src: tensor
        storage_offset: None
        stride: list[int]
      msg: mismatch in length of strides and shape
      package: torch
    txt: len(stride) == len(size)
  - f1_score: 93.71980676328502
    overall_score: 47.09090909090909
    precision: 88.18181818181819
    recall: 100.0
- - cot: divided
    target:
      choosen_dtype:
        self: tensor
        size: list[int]
        src: tensor
        storage_offset: int
        stride: list[int]
      msg: 'as_strided: Negative strides are not supported at the moment, got strides:
        [-3]'
      package: torch
    txt: stride[0] > 0
  - f1_score: 97.90518191841235
    overall_score: 100
    precision: 100.0
    recall: 95.89632829373652
- - cot: divided
    length: 1
    target:
      choosen_dtype:
        self: tensor
        size: list[int]
        src: tensor
        storage_offset: int
        stride: list[int]
      msg: Storage size calculation overflowed with sizes=[-1, 9, 9, 9, 9, 9, 9, 9,
        9] and strides=[9, 9, 9, 9, 9, 9, 9, 9, 9]
      package: torch
    txt: all(size[i]>0 for i in range(len(size)))
  - f1_score: 82.64462809917356
    overall_score: 53.32231404958678
    precision: 100.0
    recall: 70.42253521126761
